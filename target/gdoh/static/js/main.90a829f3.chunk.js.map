{"version":3,"sources":["containers/Home.jsx","containers/NotFound.jsx","components/LoaderButton.jsx","containers/Login.jsx","containers/MainSearch.jsx","components/PatientTabView.jsx","components/PatientSearchResultsTable.jsx","containers/PatientSearchResults.jsx","components/TabView.jsx","components/AppliedRoute.jsx","Routes.jsx","App.js","serviceWorker.js","index.js","images/GPG-Logo.png","images/find.png"],"names":["Home","react_default","a","createElement","className","Component","containers_NotFound","components_LoaderButton","_ref","isLoading","text","loadingText","_ref$className","_ref$disabled","disabled","props","Object","objectWithoutProperties","Button","assign","concat","Glyphicon","glyph","Login","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","id","value","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","preventDefault","sessionStorage","setItem","userHasAuthenticated","history","push","e","alert","message","stop","_x","apply","arguments","state","email","password","length","Image","src","logo","responsive","onSubmit","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","type","onChange","block","validateForm","MainSearch","pathname","hospital","searchtype","getSearchType","onChangeList","onSearchChangeSetPatient","patientIdchecked","onSearchChangeSetID","system","undefined","componentClass","placeholder","inputRef","ref","Radio","name","inline","defaultChecked","onClick","bind","withRouter","PatientTabView","Tabs","defaultActiveKey","Tab","eventKey","title","PatientSearchResultsTable","data","url","datalist","fetch","mode","method","headers","accept","Content-Type","Access-Control-Allow-Origin","Connection","req","json","response","status","PatientProfile","person","map","cur","console","log","Identifier","ID","FirstName","LastName","Gender","BirthDate","Nationality","LastVisitDate","LastVisitClassification","react_loader_spinner_default","color","height","width","Grid","Row","Col","xs","md","react_bootstrap_table_next_lib_default","striped","hover","keyField","columns","dataField","style","marginTop","PatientTabView_PatientTabView","PatientSearchResults","PatientSearchResultsTable_PatientSearchResultsTable","location","TabView","src_containers_MainSearch","AppliedRoute","C","component","cProps","rest","Route","render","Routes","childProps","Switch","path","exact","MainSearchResults","MainTab","NotFound","App","authenticated","isAuthenticated","handleLogout","clear","isAuthenticating","getItem","Navbar","fluid","collapseOnSelect","Header","Brand","Link","to","alt","Toggle","Collapse","Nav","pullRight","NavItem","react","lib","Boolean","window","hostname","match","ReactDOM","BrowserRouter","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"ugBAGqBA,2LAEjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,0DANwBE,cCAnBC,UAAA,kBACbL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,6GCDWI,UAAA,SAAAC,GAAA,IACbC,EADaD,EACbC,UACAC,EAFaF,EAEbE,KACAC,EAHaH,EAGbG,YAHaC,EAAAJ,EAIbJ,iBAJa,IAAAQ,EAID,GAJCA,EAAAC,EAAAL,EAKbM,gBALa,IAAAD,KAMVE,EANUC,OAAAC,EAAA,EAAAD,CAAAR,EAAA,kEAQbP,EAAAC,EAAAC,cAACe,EAAA,EAADF,OAAAG,OAAA,CACEf,UAAS,gBAAAgB,OAAkBhB,GAC3BU,SAAUA,GAAYL,GAClBM,GAEHN,GAAaR,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAWC,MAAM,UAAUlB,UAAU,aACjDK,EAAmBE,EAAPD,sBCZGa,sBACnB,SAAAA,EAAYR,GAAO,IAAAS,EAAA,OAAAR,OAAAS,EAAA,EAAAT,CAAAU,KAAAH,IACjBC,EAAAR,OAAAW,EAAA,EAAAX,CAAAU,KAAAV,OAAAY,EAAA,EAAAZ,CAAAO,GAAAM,KAAAH,KAAMX,KAaRe,aAAe,SAAAC,GACbP,EAAKQ,SAALhB,OAAAiB,EAAA,EAAAjB,CAAA,GACGe,EAAMG,OAAOC,GAAKJ,EAAMG,OAAOE,SAhBjBZ,EAoBnBa,aApBmB,eAAA7B,EAAAQ,OAAAsB,EAAA,EAAAtB,CAAAuB,EAAArC,EAAAsC,KAoBJ,SAAAC,EAAMV,GAAN,OAAAQ,EAAArC,EAAAwC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACbd,EAAMe,iBACNtB,EAAKQ,SAAS,CAAEvB,WAAW,IAE3B,IACEsC,eAAeC,QAAQ,YAAY,GACnCxB,EAAKT,MAAMkC,sBAAqB,GAChCzB,EAAKT,MAAMmC,QAAQC,KAAK,gBACxB,MAAOC,GACPC,MAAMD,EAAEE,SACR9B,EAAKQ,SAAS,CAAEvB,WAAW,IAVhB,wBAAAkC,EAAAY,SAAAd,MApBI,gBAAAe,GAAA,OAAAhD,EAAAiD,MAAA/B,KAAAgC,YAAA,GAGjBlC,EAAKmC,MAAQ,CACTlD,WAAW,EACbmD,MAAO,GACPC,SAAU,IANKrC,8EAWjB,OAAOE,KAAKiC,MAAMC,MAAME,OAAS,GAAKpC,KAAKiC,MAAME,SAASC,OAAS,mCAyBnE,OACE7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAO3D,UAAU,SAAS4D,IAAKC,IAAMC,YAAU,IACjDjE,EAAAC,EAAAC,cAAA,QAAMgE,SAAUzC,KAAKW,cACnBpC,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAWC,UAAU,QAAQC,OAAO,SAClCrE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,cACAtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,QACLtC,MAAOV,KAAKiC,MAAMC,MAClBe,SAAUjD,KAAKI,gBAGnB7B,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAWC,UAAU,WAAWC,OAAO,SACrCrE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,iBACAtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEpC,MAAOV,KAAKiC,MAAME,SAClBc,SAAUjD,KAAKI,aACf4C,KAAK,cAGTzE,EAAAC,EAAAC,cAACI,EAAD,CACEqE,OAAK,EACLN,OAAO,QACPxD,UAAWY,KAAKmD,eAChBH,KAAK,SACLjE,UAAWiB,KAAKiC,MAAMlD,UACtBC,KAAK,QACLC,YAAY,8BAjEWN,wCCC7ByE,sBACJ,SAAAA,EAAY/D,GAAO,IAAAS,EAAA,OAAAR,OAAAS,EAAA,EAAAT,CAAAU,KAAAoD,IACjBtD,EAAAR,OAAAW,EAAA,EAAAX,CAAAU,KAAAV,OAAAY,EAAA,EAAAZ,CAAA8D,GAAAjD,KAAAH,KAAMX,KAwBRe,aAAe,SAAAC,GACbP,EAAKQ,SAAS,CACZI,MAAOL,EAAMG,OAAOE,SA3BLZ,EA+BnBa,aA/BmB,eAAA7B,EAAAQ,OAAAsB,EAAA,EAAAtB,CAAAuB,EAAArC,EAAAsC,KA+BJ,SAAAC,EAAMV,GAAN,OAAAQ,EAAArC,EAAAwC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACbd,EAAMe,iBACN,IAEEtB,EAAKT,MAAMmC,QAAQC,KAAK,CACtB4B,SAAU,wBACVpB,MAAO,CACLqB,SAAWxD,EAAKmC,MAAMqB,SAAS5C,MACjC6C,WAAazD,EAAK0D,gBACpB9C,MAASZ,EAAKmC,MAAMvB,SAEpB,MAAOgB,GACPC,MAAMD,EAAEE,SACR9B,EAAKQ,SAAS,CAAEvB,WAAW,IAbhB,wBAAAkC,EAAAY,SAAAd,MA/BI,gBAAAe,GAAA,OAAAhD,EAAAiD,MAAA/B,KAAAgC,YAAA,GAAAlC,EAgDnB2D,aAAe,SAAApD,GACbP,EAAKQ,SAAS,CAACgD,SAAUjD,EAAMG,OAAOE,SAjDrBZ,EAoDnB4D,yBAA2B,SAAAhC,GACzB5B,EAAKQ,SAAS,CACZqD,kBAAkB,KAtDH7D,EAyDnB8D,oBAAsB,SAAAlC,GACpB5B,EAAKQ,SAAS,CACZqD,kBAAkB,KAxDpB7D,EAAKmC,MAAQ,CACTlD,WAAW,EACbuE,SAAU,GACVO,OAAS,GACTF,kBAAkB,EAClBjD,WAAOoD,GARQhE,8EAajB,OAAO,0CAKP,OAAGE,KAAKiC,MAAM0B,iBACL,UAEA,sCA4CT,OACEpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAO3D,UAAU,SAAS4D,IAAKC,IAAMC,YAAU,IACjDjE,EAAAC,EAAAC,cAAA,QAAMgE,SAAUzC,KAAKW,cACrBpC,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAWC,UAAU,qBAAqBC,OAAO,SAC7CrE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,gBACAtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAaiB,eAAe,SAASC,YAAY,MAAMC,SAAU,SAACC,KAC7DjB,SAAUjD,KAAKI,cAChB7B,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,OAAd,OACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,YAAd,YACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,QAAd,QACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,SAAd,SACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,QAAd,QACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,QAAd,QACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,iBAAd,mBAGJnC,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAWC,UAAU,qBAAqBC,OAAO,SACjDrE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,iBACAtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAaiB,eAAe,SAASC,YAAY,MAAMC,SAAU,SAACC,KAC7DjB,SAAUjD,KAAKyD,cAChBlF,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,OAAd,OACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,oBAAd,oBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,YAAd,YACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,YAAd,YACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,cAAd,cACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,gBAAd,gBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,WACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,kBAAd,kBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,YAAd,YACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,YAAd,YACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,YAAd,YACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,WACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,OAAd,OACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,aAAd,aACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,iBAAd,iBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,gBAAd,gBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,SAAd,SACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,cAAd,cACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,gBAAd,gBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,QAAd,QACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,SAAd,SACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,WACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,WACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,iBAAd,iBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,aAAd,aACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,YAAd,YACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,eAAd,iBAKJnC,EAAAC,EAAAC,cAACiE,EAAA,EAAD,KACAnE,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAOC,KAAK,aAAaC,QAAM,EAC/BC,gBAAc,EACdC,QAASvE,KAAK0D,yBAAyBc,KAAKxE,OAF5C,sBAIS,IACTzB,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAOC,KAAK,aAAaC,QAAM,EAACE,QAASvE,KAAK4D,oBAAoBY,KAAKxE,OAAvE,mBAES,KAKZA,KAAKiC,MAAM0B,iBAAmBpF,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAWC,UAAU,YAAYC,OAAO,SACnErE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,mBACAtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,OACLtC,MAAOV,KAAKiC,MAAMvB,MAClBuC,SAAUjD,KAAKI,aAAaoE,KAAKxE,SAEtBzB,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAWC,UAAU,KAAKC,OAAO,SAC9CrE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,kBACAtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEpC,MAAOV,KAAKiC,MAAMvB,MAClBuC,SAAUjD,KAAKI,aAAaoE,KAAKxE,MACjCgD,KAAK,YAGTzE,EAAAC,EAAAC,cAACI,EAAD,CACEqE,OAAK,EACLN,OAAO,QACPxD,UAAWY,KAAKmD,eAChBH,KAAK,SACLjE,UAAWiB,KAAKiC,MAAMlD,UACtBC,KAAK,OACLC,YAAY,6BA1JCN,cAkKV8F,cAAWrB,sGCrKLsB,mLAEb,OACInG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAMC,iBAAkB,EAAGnE,GAAG,eAC1BlC,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAKC,SAAU,EAAGC,MAAM,gBAAxB,gBAGAxG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAKC,SAAU,EAAGC,MAAM,mBAAxB,oBAGAxG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAKC,SAAU,EAAGC,MAAM,eAAxB,4BAV4BpG,aCGvBqG,cAEnB,SAAAA,IAAa,IAAAlF,EAAA,OAAAR,OAAAS,EAAA,EAAAT,CAAAU,KAAAgF,IACXlF,EAAAR,OAAAW,EAAA,EAAAX,CAAAU,KAAAV,OAAAY,EAAA,EAAAZ,CAAA0F,GAAA7E,KAAAH,QACKiC,MAAQ,CACXgD,KAAO,GACPlG,WAAY,GAJHe,oNASXE,KAAKM,SAAS,CAACvB,WAAW,IACOmG,EAAM,GACvC3B,EAAavD,KAAKX,MAAM8F,SAAS5B,WACjC7C,EAAQV,KAAKX,MAAM8F,SAASzE,MAC5B4C,EAAWtD,KAAKX,MAAM8F,SAAS7B,SAG3B4B,EAFU,QAAX5B,EACe,YAAbC,EACE,+GAAA7D,OAAkHgB,GAElH,qGAAAhB,OAAwGgB,GAGvF,YAAf6C,EACJ,yGAAA7D,OAA4GgB,EAA5G,cAAAhB,OAA8H4D,GAE9H,yFAAA5D,OAA4FgB,EAA5F,cAAAhB,OAA8G4D,YAGrG8B,MAAMF,EACd,CACEG,KAAO,OACPC,OAAS,MACTC,QAAU,CACRC,OAAU,mBACVC,eAAiB,mBACjBC,8BAA+B,IAC/BC,WAAc,8BARtBC,mBAWiBA,EAAIC,eAArBC,SAGgB,MAAfF,EAAIG,OAEyB,MAA3BD,EAASE,iBACJC,EAASH,EAASE,eAAeE,IAAI,SAAAC,GAEzC,OADAC,QAAQC,IAAIF,GAEV,CAAC1F,GAAK0F,EAAIG,WAAJ,EACNC,GAAKJ,EAAII,GAAJ,EACHC,UAAYL,EAAIK,UAChBC,SAAWN,EAAIM,SACfC,OAASP,EAAIO,OACbC,UAAYR,EAAIQ,UAChBC,YAAcT,EAAIS,YAClBtD,SAAW6C,EAAI,aACfU,cAAgBV,EAAIU,cACpBC,wBAA0BX,EAAIW,2BAIpC9G,KAAKM,SAAS,CAAC2E,KAAOgB,EAAQlH,WAAY,MAI5CiB,KAAKM,SAAS,CAACvB,WAAW,IAC1B4C,MAAM,+KAoBR,OACEpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAENsB,KAAKiC,MAAMlD,UAAYR,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,CAC7BwE,KAAK,UACLgE,MAAM,UACNC,OAAO,MACPC,MAAM,MACNxI,UAAU,WACNH,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,KACP5I,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,CAAK1I,UAAU,aACfH,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACdhJ,EAAAC,EAAAC,cAAC+I,EAAAhJ,EAAD,CACUiJ,SAAO,EACPC,OAAK,EACLC,SAAS,SACT1C,KAAOjF,KAAKiC,MAAMgD,KAClB2C,QA5BE,CAAC,CACfC,UAAW,KACX7I,KAAM,cACL,CACD6I,UAAW,KACX7I,KAAM,MACL,CACD6I,UAAW,WACX7I,KAAM,gBAsBNT,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GACjBhJ,EAAAC,EAAAC,cAAA,OAAKqJ,MAAO,CAAEC,UAAW,KACnBxJ,EAAAC,EAAAC,cAACuJ,EAAD,kBA5G2CrJ,aCDlCsJ,oLAGb,OACI1J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAO3D,UAAU,mBAAmB4D,IAAKC,IAAMC,YAAU,IACzDjE,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAACyJ,EAAD,CAAc/C,SAAUnF,KAAKX,MAAM8I,SAASlG,gBAPVtD,aCD7ByJ,oLAEb,OACI7J,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAMC,iBAAkB,EAAGnE,GAAG,eAC1BlC,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAKC,SAAU,EAAGC,MAAM,WACpBxG,EAAAC,EAAAC,cAAC4J,EAAD,OAEJ9J,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAKC,SAAU,EAAGC,MAAM,UAAU3F,UAAQ,GAA1C,WAGAb,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAKC,SAAU,EAAGC,MAAM,UAAU3F,UAAQ,GAA1C,mBAVqBT,aCFtB2J,GAAA,SAAAxJ,GAAA,IAAcyJ,EAAdzJ,EAAG0J,UAAqBC,EAAxB3J,EAAiBO,MAAkBqJ,EAAnCpJ,OAAAC,EAAA,EAAAD,CAAAR,EAAA,8BACbP,EAAAC,EAAAC,cAACkK,EAAA,EAADrJ,OAAAG,OAAA,GAAWiJ,EAAX,CAAiBE,OAAQ,SAAAvJ,GAAK,OAAId,EAAAC,EAAAC,cAAC8J,EAADjJ,OAAAG,OAAA,GAAOJ,EAAWoJ,SCMvCI,GAAA,SAAA/J,GAAA,IAAGgK,EAAHhK,EAAGgK,WAAH,OACbvK,EAAAC,EAAAC,cAACsK,EAAA,EAAD,KACExK,EAAAC,EAAAC,cAAC6J,GAAD,CAAcU,KAAK,IAAIC,OAAK,EAACT,UAAWlK,EAAMe,MAAOyJ,IACrDvK,EAAAC,EAAAC,cAAC6J,GAAD,CAAcU,KAAK,SAASC,OAAK,EAACT,UAAW3I,EAAOR,MAAOyJ,IAC3DvK,EAAAC,EAAAC,cAAC6J,GAAD,CAAcU,KAAK,cAAcC,OAAK,EAACT,UAAWpF,EAAY/D,MAAOyJ,IACrEvK,EAAAC,EAAAC,cAAC6J,GAAD,CAAcU,KAAK,wBAAwBC,OAAK,EAACT,UAAWU,GAAmB7J,MAAOyJ,IACtFvK,EAAAC,EAAAC,cAAC6J,GAAD,CAAcU,KAAK,eAAeC,OAAK,EAACT,UAAWW,GAAS9J,MAAOyJ,IAEnEvK,EAAAC,EAAAC,cAACkK,EAAA,EAAD,CAAOH,UAAWY,MCNhBC,uBAEJ,SAAAA,EAAYhK,GAAO,IAAAS,EAAA,OAAAR,OAAAS,EAAA,EAAAT,CAAAU,KAAAqJ,IACjBvJ,EAAAR,OAAAW,EAAA,EAAAX,CAAAU,KAAAV,OAAAY,EAAA,EAAAZ,CAAA+J,GAAAlJ,KAAAH,KAAMX,KAuBRkC,qBAAuB,SAAA+H,GACrBxJ,EAAKQ,SAAS,CAAEiJ,gBAAiBD,KAzBhBxJ,EA4BnB0J,aAAe,SAAAnJ,GACbP,EAAKyB,sBAAqB,GAC1BzB,EAAKT,MAAMmC,QAAQC,KAAK,UACxBJ,eAAeoI,SA5Bf3J,EAAKmC,MAAQ,CACXsH,iBAAiB,EACjBG,kBAAkB,GALH5J,2LAWjB,IACyC,SAAvCuB,eAAesI,QAAQ,YAAyB3J,KAAKuB,sBAAqB,GAAQvB,KAAKuB,sBAAqB,GAE9G,MAAMG,GACM,oBAANA,GACFC,MAAMD,GAIV1B,KAAKM,SAAS,CAAEoJ,kBAAkB,uIAgBlC,IAAMZ,EAAa,CACjBS,gBAAiBvJ,KAAKiC,MAAMsH,gBAC5BhI,qBAAsBvB,KAAKuB,sBAG7B,OACGvB,KAAKiC,MAAMyH,kBACZnL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAQC,OAAK,EAACC,kBAAgB,GAC5BvL,EAAAC,EAAAC,cAACmL,EAAA,EAAOG,OAAR,KACExL,EAAAC,EAAAC,cAACmL,EAAA,EAAOI,MAAR,KACEzL,EAAAC,EAAAC,cAACwL,EAAA,EAAD,CAAMC,GAAG,KAAI3L,EAAAC,EAAAC,cAAA,OAAK6D,IAAKC,IAAM4H,IAAI,GAAGrC,MAAO,CAACZ,MAAM,IAAKa,WAAY,KAAnE,iCAEFxJ,EAAAC,EAAAC,cAACmL,EAAA,EAAOQ,OAAR,OAEF7L,EAAAC,EAAAC,cAACmL,EAAA,EAAOS,SAAR,KACE9L,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAKC,WAAS,GACXvK,KAAKiC,MAAMsH,gBACRhL,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,CAASjG,QAASvE,KAAKwJ,cAAvB,UACAjL,EAAAC,EAAAC,cAACgM,EAAA,SAAD,KACElM,EAAAC,EAAAC,cAACiM,EAAA,cAAD,CAAeR,GAAG,WAChB3L,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,gBAEFjM,EAAAC,EAAAC,cAACiM,EAAA,cAAD,CAAeR,GAAG,UAChB3L,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,mBAOdjM,EAAAC,EAAAC,cAACoK,GAAD,CAAQC,WAAYA,YArEVnK,cA4EH8F,eAAW4E,IC5ENsB,QACW,cAA7BC,OAAOzC,SAAS0C,UAEe,UAA7BD,OAAOzC,SAAS0C,UAEhBD,OAAOzC,SAAS0C,SAASC,MACvB,2DCXNC,IAASnC,OAAOrK,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CAAQC,SAAUC,SAC9B3M,EAAAC,EAAAC,cAAC0M,GAAD,OACSC,SAASC,eAAe,SDwH/B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.90a829f3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Home.css\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div className=\"Home\">\n        <div className=\"lander\">\n          <h1>GDoH</h1>\n          <p>A simple health care information app</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./NotFound.css\";\n\nexport default () =>\n  <div className=\"NotFound\">\n    <h3>Sorry, page not found!</h3>\n  </div>;\n","import React from \"react\";\nimport { Button, Glyphicon } from \"react-bootstrap\";\nimport \"./LoaderButton.css\";\n\nexport default ({\n  isLoading,\n  text,\n  loadingText,\n  className = \"\",\n  disabled = false,\n  ...props\n}) =>\n  <Button\n    className={`LoaderButton ${className}`}\n    disabled={disabled || isLoading}\n    {...props}\n  >\n    {isLoading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}\n    {!isLoading ? text : loadingText}\n  </Button>;\n","import React, { Component } from \"react\";\nimport { FormGroup, FormControl, ControlLabel, Image } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport logo from '../images/GPG-Logo.png';\nimport \"./Login.css\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        isLoading: false,\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  validateForm() {\n    return this.state.email.length > 0 && this.state.password.length > 0;\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    this.setState({ isLoading: true });\n    \n    try {\n      sessionStorage.setItem(\"loggedIn\", true);\n      this.props.userHasAuthenticated(true);\n      this.props.history.push(\"/maintabview\");\n    } catch (e) {\n      alert(e.message);\n      this.setState({ isLoading: false });\n    }\n  }\n  \n\n  render() {\n    return (\n      <div className=\"Login\">\n          <Image className=\"center\" src={logo} responsive />\n        <form onSubmit={this.handleSubmit}>\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            <ControlLabel>Email</ControlLabel>\n            <FormControl\n              autoFocus\n              type=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            <ControlLabel>Password</ControlLabel>\n            <FormControl\n              value={this.state.password}\n              onChange={this.handleChange}\n              type=\"password\"\n            />\n          </FormGroup>\n          <LoaderButton\n            block\n            bsSize=\"large\"\n            disabled={!this.validateForm()}\n            type=\"submit\"\n            isLoading={this.state.isLoading}\n            text=\"Login\"\n            loadingText=\"Logging in…\"\n            />\n        </form>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { FormGroup, FormControl, ControlLabel, Image, Radio } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { withRouter } from 'react-router-dom';\nimport logo from '../images/find.png';\nimport \"./MainSearch.css\";\n\nclass MainSearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        isLoading: false,\n      hospital: \"\",\n      system : \"\",\n      patientIdchecked: true,\n      value: undefined\n    };\n  }\n\n  validateForm() {\n    return true;\n  }\n\n  getSearchType(){ \n    \n    if(this.state.patientIdchecked){\n      return \"patient\"\n    }else{\n      return \"Id\"\n    }\n  }\n\n  handleChange = event => {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    try {\n\n      this.props.history.push({\n        pathname: '/patientsearchresults',\n        state: { \n          hospital : this.state.hospital.value,\n        searchtype : this.getSearchType(),\n      value :  this.state.value}\n      });\n    } catch (e) {\n      alert(e.message);\n      this.setState({ isLoading: false });\n    }\n  }\n\n  onChangeList = event => {\n    this.setState({hospital: event.target.value});\n  }\n\n  onSearchChangeSetPatient = e => {\n    this.setState({\n      patientIdchecked: true\n     });\n    }\n  onSearchChangeSetID = e => {\n    this.setState({\n      patientIdchecked: false\n     });\n  }\n  \n\n  render() {\n    return (\n      <div className=\"MainSearch\">\n          <Image className=\"center\" src={logo} responsive />\n        <form onSubmit={this.handleSubmit}>\n        <FormGroup controlId=\"formControlsSelect\" bsSize=\"large\">\n            <ControlLabel>Systems</ControlLabel>\n            <FormControl componentClass=\"select\" placeholder=\"HIS\" inputRef={(ref) => {}}\n                 onChange={this.handleChange}>\n                <option value=\"HIS\">HIS</option>\n                <option value=\"Pharmacy\">Pharmacy</option>\n                <option value=\"HPRS\">HPRS</option>\n                <option value=\"SANBS\">SANBS</option>\n                <option value=\"NHLS\">NHLS</option>\n                <option value=\"PACS\">PACS</option>\n                <option value=\"Mental Health\">Mental Health</option>\n            </FormControl>\n            </FormGroup>\n            <FormGroup controlId=\"formControlsSelect\" bsSize=\"large\">\n            <ControlLabel>Hospital</ControlLabel>\n            <FormControl componentClass=\"select\" placeholder=\"All\" inputRef={(ref) => {}}\n                 onChange={this.onChangeList}>\n                <option value=\"All\">All</option>\n                <option value=\"Charlotte Maxeke\">Charlotte Maxeke</option>\n                <option value=\"Cullinan\">Cullinan</option>\n                <option value=\"Edenvale\">Edenvale</option>\n                <option value=\"Heidelberg\">Heidelberg</option>\n                <option value=\"Helen Joseph\">Helen Joseph</option>\n                <option value=\"Jubilee\">Jubilee</option>\n                <option value=\"Fare East Rand\">Fare East Rand</option>\n                <option value=\"Kalafong\">Kalafong</option>\n                <option value=\"Kopanong\">Kopanong</option>\n                <option value=\"Leratong\">Leratong</option>\n                <option value=\"Medunsa\">Medunsa</option>\n                <option value=\"Odi\">Odi</option>\n                <option value=\"Pholosong\">Pholosong</option>\n                <option value=\"Pretoria West\">Pretoria West</option>\n                <option value=\"Rahima Moosa\">Rahima Moosa</option>\n                <option value=\"Sizwe\">Sizwe</option>\n                <option value=\"South Rand\">South Rand</option>\n                <option value=\"Sterkfontein\">Sterkfontein</option>\n                <option value=\"Tara\">Tara</option>\n                <option value=\"Tambo\">Tambo</option>\n                <option value=\"Tembisa\">Tembisa</option>\n                <option value=\"Tshwane\">Tshwane</option>\n                <option value=\"Tshwane Rehab\">Tshwane Rehab</option>\n                <option value=\"Wits Oral\">Wits Oral</option>\n                <option value=\"Mamelodi\">Mamelodi</option>\n                <option value=\"Yusuf Dadoo\">Yusuf Dadoo</option>\n\n\n            </FormControl>\n            </FormGroup>\n            <FormGroup>\n            <Radio name=\"radioGroup\" inline \n            defaultChecked\n            onClick={this.onSearchChangeSetPatient.bind(this)}>\n              Patient Identifier\n            </Radio>{' '}\n            <Radio name=\"radioGroup\" inline onClick={this.onSearchChangeSetID.bind(this)}>\n              Identity Number\n            </Radio>{' '}\n          \n          </FormGroup>\n\n\n        {this.state.patientIdchecked ? <FormGroup controlId=\"patientId\" bsSize=\"large\">\n            <ControlLabel>Patient ID</ControlLabel>\n            <FormControl\n              autoFocus\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.handleChange.bind(this)}\n            />\n          </FormGroup> : <FormGroup controlId=\"Id\" bsSize=\"large\">\n            <ControlLabel>Id Number</ControlLabel>\n            <FormControl\n              value={this.state.value}\n              onChange={this.handleChange.bind(this)}\n              type=\"number\"\n            />\n          </FormGroup>}\n          <LoaderButton\n            block\n            bsSize=\"large\"\n            disabled={!this.validateForm()}\n            type=\"submit\"\n            isLoading={this.state.isLoading}\n            text=\"find\"\n            loadingText=\"searching…\"\n            />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(MainSearch);","import React, { Component } from 'react'\nimport { Tab, Tabs } from 'react-bootstrap';\n \n\nexport default class PatientTabView extends Component {\n    render(){\n        return(\n            <Tabs defaultActiveKey={1} id=\"maintabview\">\n                <Tab eventKey={1} title=\"Demographics\">\n                    Demographics\n                </Tab>\n                <Tab eventKey={2} title=\"Contact details\">\n                    contract details\n                </Tab>\n                <Tab eventKey={3} title=\"Next of Kin\">\n                    next of kin data\n                </Tab>\n            </Tabs>\n        );\n    }\n}","import React, { Component } from 'react'\nimport {Grid, Col, Row} from 'react-bootstrap'\nimport Loader from 'react-loader-spinner'\nimport './PatientSearchResultsTable.css'\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport PatientTabView from '../components/PatientTabView';\n\nexport default class PatientSearchResultsTable extends Component{\n\n  constructor(){\n    super();\n    this.state = {\n      data : [],\n      isLoading : false\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({isLoading: true});\n    var searchtype, value, hospital, url = \"\";\n    searchtype = this.props.datalist.searchtype;\n    value = this.props.datalist.value;\n    hospital = this.props.datalist.hospital;\n    if(hospital==='All'){\n      if(searchtype==='patient'){\n        url = `http://10.32.60.74:7004/gdoh-patient-profile-service/PSQueryByIdentifierOnlyRS/patientidentifier?Identifier=${value}`\n      }else{\n        url = `http://10.32.60.74:7004/gdoh-patient-profile-service/PSQueryByIDNumberOnlyRS/patientidentifier?ID=${value}`\n      }\n       \n    }else if(searchtype === 'patient'){\n      url = `http://10.32.60.74:7004/gdoh-patient-profile-service/PatientIdentifierRS/patientidentifier?Identifier=${value}&Hospital=${hospital}`\n    }else{\n      url = `http://10.32.60.74:7004/gdoh-patient-profile-service/PatientIdRS/patientidhospital?ID=${value}&Hospital=${hospital}`\n      \n    }\n  var req = await fetch(url,\n          {\n            mode : 'cors',\n            method : 'GET',\n            headers : {\n              'accept': 'application/json',\n              'Content-Type' : 'application/json',\n              'Access-Control-Allow-Origin': '*',\n              'Connection': 'Keep-Alive'\n            }\n          })\n  var response = await req.json();\n  //console.log(response);\n\n    if(req.status === 200){\n\n      if(response.PatientProfile != null){\n        const person = response.PatientProfile.map(cur => {\n          console.log(cur)\n          return (\n            {id : cur.Identifier[\"$\"],\n            ID : cur.ID[\"$\"],\n              FirstName : cur.FirstName,\n              LastName : cur.LastName,\n              Gender : cur.Gender,\n              BirthDate : cur.BirthDate,\n              Nationality : cur.Nationality,\n              hospital : cur[\"@hospital\"],\n              LastVisitDate : cur.LastVisitDate,\n              LastVisitClassification : cur.LastVisitClassification\n            }\n          );\n        });\n        this.setState({data : person, isLoading : false});\n      }\n      \n    }else{\n      this.setState({isLoading: false })\n      alert('something went wrong, please try again');\n    }\n    \n  }\n\n  render(){\n\n    //console.log(data)\n    \n    const columns = [{\n      dataField: 'id',\n      text: 'Patient ID'\n    }, {\n      dataField: 'ID',\n      text: 'ID'\n    }, {\n      dataField: 'hospital',\n      text: 'hospital'\n    }\n    ];\n    return(\n      <div className=\"maindiv\">\n        \n              {this.state.isLoading ? <Loader \n         type=\"Circles\"\n         color=\"#00BFFF\"\n         height=\"200\"\t\n         width=\"200\"\n         className=\"center\"\n      />   : <Grid>\n      <Row className=\"show-grid\">\n      <Col xs={6} md={4}>\n        <BootstrapTable \n                  striped\n                  hover\n                  keyField='Gender' \n                  data={ this.state.data } \n                  columns={ columns } />  \n      </Col>\n      <Col xs={12} md={8}>\n      <div style={{ marginTop: 50 }}>\n            <PatientTabView/>\n          </div>\n      </Col>\n    </Row>\n    </Grid>\n      }\n      </div>\n      \n    \n\n\n      \n    );\n  }\n\n\n}\n  ","import React, { Component } from 'react'\nimport logo from '../images/find.png'\nimport { Image } from 'react-bootstrap'\nimport './PatientSearchResults.css';\nimport PatientTable from '../components/PatientSearchResultsTable'\n\nexport default class PatientSearchResults extends Component{\n\n    render(){\n        return (\n            <div className=\"patients\">\n                <Image className=\"imagesize center\" src={logo} responsive />\n                <h2>Search Results</h2>\n                <PatientTable datalist={this.props.location.state}/>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react'\nimport { Tab, Tabs } from 'react-bootstrap';\nimport MainSearch from '../containers/MainSearch';\n \n\nexport default class TabView extends Component {\n    render(){\n        return(\n            <Tabs defaultActiveKey={1} id=\"maintabview\">\n                <Tab eventKey={1} title=\"Phase 1\">\n                    <MainSearch/>\n                </Tab>\n                <Tab eventKey={2} title=\"Phase 2\" disabled>\n                    Phase 2\n                </Tab>\n                <Tab eventKey={3} title=\"Phase 3\" disabled>\n                    Phase 3\n                </Tab>\n            </Tabs>\n        );\n    }\n}","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nexport default ({ component: C, props: cProps, ...rest }) =>\n  <Route {...rest} render={props => <C {...props} {...cProps} />} />;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./containers/Home\";\nimport NotFound from \"./containers/NotFound\";\nimport Login from \"./containers/Login\";\nimport MainSearch from \"./containers/MainSearch\";\nimport MainSearchResults from \"./containers/PatientSearchResults\";\nimport MainTab from \"./components/TabView\";\nimport AppliedRoute from \"./components/AppliedRoute\";\n\nexport default ({ childProps }) =>\n  <Switch>\n    <AppliedRoute path=\"/\" exact component={Home} props={childProps} />\n    <AppliedRoute path=\"/login\" exact component={Login} props={childProps} />\n    <AppliedRoute path=\"/mainsearch\" exact component={MainSearch} props={childProps} />\n    <AppliedRoute path=\"/patientsearchresults\" exact component={MainSearchResults} props={childProps} />\n    <AppliedRoute path=\"/maintabview\" exact component={MainTab} props={childProps} />\n    { /* Finally, catch all unmatched routes */ }\n    <Route component={NotFound} />\n  </Switch>;\n\n","//eslint-disable jsx-a11y/alt-text\n\nimport React, { Component, Fragment } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport Routes from \"./Routes\";\nimport logo from './images/GPG-Logo.png';\nimport \"./App.css\";\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n  \n    this.state = {\n      isAuthenticated: false,\n      isAuthenticating: true\n    };\n    \n  }\n\n  async componentDidMount() {\n    try {\n      sessionStorage.getItem(\"loggedIn\") === 'true' ? this.userHasAuthenticated(true) : this.userHasAuthenticated(false);\n    }\n    catch(e) {\n      if (e !== 'No current user') {\n        alert(e);\n      }\n    }\n  \n    this.setState({ isAuthenticating: false });\n  }\n  \n  \n  userHasAuthenticated = authenticated => {\n    this.setState({ isAuthenticated: authenticated });\n  }\n  \n  handleLogout = event => {\n    this.userHasAuthenticated(false);\n    this.props.history.push(\"/login\");\n    sessionStorage.clear();\n  }\n  \n\n  render() {\n    const childProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      userHasAuthenticated: this.userHasAuthenticated\n    };\n  \n    return (\n      !this.state.isAuthenticating &&\n      <div className=\"App container\">\n        <Navbar fluid collapseOnSelect>\n          <Navbar.Header>\n            <Navbar.Brand>\n              <Link to=\"/\"><img src={logo} alt=\"\" style={{width:100, marginTop: -7}} />Gauteng Department of Health</Link>\n            </Navbar.Brand>\n            <Navbar.Toggle />\n          </Navbar.Header>\n          <Navbar.Collapse>\n            <Nav pullRight>\n              {this.state.isAuthenticated\n                ? <NavItem onClick={this.handleLogout}>Logout</NavItem>\n                : <Fragment>\n                    <LinkContainer to=\"/signup\">\n                      <NavItem>Signup</NavItem>\n                    </LinkContainer>\n                    <LinkContainer to=\"/login\">\n                      <NavItem>Login</NavItem>\n                    </LinkContainer>\n                  </Fragment>\n              }\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Routes childProps={childProps} />\n      </div>\n    );\n  }\n  \n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router basename={process.env.REACT_APP_ROUTER_BASE || ''}>\n    <App />\n  </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","module.exports = __webpack_public_path__ + \"static/media/GPG-Logo.278d9f24.png\";","module.exports = __webpack_public_path__ + \"static/media/find.8b689b8f.png\";"],"sourceRoot":""}