{"version":3,"sources":["containers/Home.jsx","containers/NotFound.jsx","components/LoaderButton.jsx","containers/Login.jsx","containers/MainSearch.jsx","containers/PersonalDetailsTab.jsx","containers/ContactDetailsTab.jsx","components/PersonalDetailsTabTable.jsx","containers/PharmacyInfoTab.jsx","components/PharmacyPatientTabView.jsx","containers/HealthInfoTab.jsx","components/PatientTabView.jsx","components/PatientSearchResultsTable.jsx","containers/PatientSearchResults.jsx","components/TabView.jsx","components/AppliedRoute.jsx","Routes.jsx","App.js","serviceWorker.js","index.js","images/GPG-Logo.png","images/find.png"],"names":["Home","react_default","a","createElement","className","Component","containers_NotFound","components_LoaderButton","_ref","isLoading","text","loadingText","_ref$className","_ref$disabled","disabled","props","Object","objectWithoutProperties","Button","assign","concat","Glyphicon","glyph","Login","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","id","value","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","preventDefault","sessionStorage","setItem","userHasAuthenticated","history","push","e","alert","message","stop","_x","apply","arguments","state","email","password","length","Image","src","logo","responsive","onSubmit","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","type","onChange","block","validateForm","MainSearch","pathname","hospital","searchtype","getSearchType","system","onChangeList","inputRef","onChangeListSystems","onSearchChangeSetPatient","patientIdchecked","onSearchChangeSetID","RenderPharmaView","bind","assertThisInitialized","RenderHISView","componentClass","placeholder","ref","Radio","name","inline","defaultChecked","onClick","RenderSANBS_DemographicsView","renderNotAvaiable","renderInitView","undefined","_this2","display","sysRef","withRouter","PersonalDetailsTab","defaultValue","getValues","details","Title","FirstName","LastName","MiddleName","ID","BirthDate","BloodType","Age","DeathDate","Race","Gender","Religion","Language","MaritalStatus","Nationality","ContactDetailsTab","getResidentialAddress","basedetails","ResidentialAddress","Line1","Line2","line3","Line3","Line4","PostalCode","NextOfKin","Relationship","ContactDetails","TelephoneNumber","Panel","Heading","Body","getPatientNextOfKinName","console","log","addr","NKaddr","PanelGroup","accordion","eventKey","toggle","collapsible","PersonalDetailsTabTable","componentDidMount","data","handleShow","handleClose","show","selected","nextProps","expandRow","showExpandColumn","renderer","row","ButtonToolbar","bsStyle","cur","PersonalDetailsTab_PersonalDetailsTab","ContactDetailsTab_ContactDetailsTab","Modal","onHide","Header","closeButton","Footer","react_bootstrap_table_next_lib_default","striped","hover","keyField","columns","dataField","sort","selectRow","mode","clickToSelect","clickToExpand","PharmacyInfoTab","templist","Prescriptions","PrescriptionDetail","PharmacyPatientTabView","Tabs","defaultActiveKey","Tab","title","PharmacyInfoTab_PharmacyInfoTab","PersonalDetailsTabTable_PersonalDetailsTabTable","demographics","healthInfoTab","LastVisitDate","LastVisitClassification","Allergies","PatientTabView","HealthInfoTab_healthInfoTab","PatientSearchResultsTable","queryForHIS","url","req","response","person","datalist","fetch","method","headers","accept","Content-Type","Access-Control-Allow-Origin","Connection","sent","json","status","PatientProfile","map","Identifier","HealthInfo","demodata","t0","_x2","_x3","showBasedOnToggle","checked","adata","ndata","queryForPharmacy","_ref2","_callee2","avListTemp","noListTemp","avList","noList","_context2","x","PersonIDNumber","Pharmacy","_x4","checkData","getColValues","getColValues2","getSwitch","react_switch_default","renderViewForHIS","react_loader_spinner_default","color","height","width","Grid","Row","Col","md","mdPush","PatientTabView_PatientTabView","isSelected","mdPull","onclickHospital","isHospTab","renderViewForPharmacy","displaySwitch","PharmacyPatientTabView_PharmacyPatientTabView","sortType","style","backgroundColor","onSelect","isSelect","rowIndex","hideSelectColumn","re","PatientSearchResults","PatientSearchResultsTable_PatientSearchResultsTable","location","TabView","src_containers_MainSearch","AppliedRoute","C","component","cProps","rest","Route","render","Routes","childProps","Switch","path","exact","MainSearchResults","MainTab","NotFound","App","authenticated","isAuthenticated","handleLogout","clear","isAuthenticating","getItem","Navbar","fluid","collapseOnSelect","Brand","Link","to","alt","marginTop","Toggle","Collapse","Nav","pullRight","react","lib","NavItem","Boolean","window","hostname","match","ReactDOM","BrowserRouter","basename","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"+hBAGqBA,2LAEjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,0DANwBE,cCAnBC,UAAA,kBACbL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,8GCDWI,UAAA,SAAAC,GAAA,IACbC,EADaD,EACbC,UACAC,EAFaF,EAEbE,KACAC,EAHaH,EAGbG,YAHaC,EAAAJ,EAIbJ,iBAJa,IAAAQ,EAID,GAJCA,EAAAC,EAAAL,EAKbM,gBALa,IAAAD,KAMVE,EANUC,OAAAC,EAAA,EAAAD,CAAAR,EAAA,kEAQbP,EAAAC,EAAAC,cAACe,EAAA,EAADF,OAAAG,OAAA,CACEf,UAAS,gBAAAgB,OAAkBhB,GAC3BU,SAAUA,GAAYL,GAClBM,GAEHN,GAAaR,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAWC,MAAM,UAAUlB,UAAU,aACjDK,EAAmBE,EAAPD,sBCZGa,sBACnB,SAAAA,EAAYR,GAAO,IAAAS,EAAA,OAAAR,OAAAS,EAAA,EAAAT,CAAAU,KAAAH,IACjBC,EAAAR,OAAAW,EAAA,EAAAX,CAAAU,KAAAV,OAAAY,EAAA,EAAAZ,CAAAO,GAAAM,KAAAH,KAAMX,KAaRe,aAAe,SAAAC,GACbP,EAAKQ,SAALhB,OAAAiB,EAAA,EAAAjB,CAAA,GACGe,EAAMG,OAAOC,GAAKJ,EAAMG,OAAOE,SAhBjBZ,EAoBnBa,aApBmB,eAAA7B,EAAAQ,OAAAsB,EAAA,EAAAtB,CAAAuB,EAAArC,EAAAsC,KAoBJ,SAAAC,EAAMV,GAAN,OAAAQ,EAAArC,EAAAwC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACbd,EAAMe,iBACNtB,EAAKQ,SAAS,CAAEvB,WAAW,IAE3B,IACEsC,eAAeC,QAAQ,YAAY,GACnCxB,EAAKT,MAAMkC,sBAAqB,GAChCzB,EAAKT,MAAMmC,QAAQC,KAAK,gBACxB,MAAOC,GACPC,MAAMD,EAAEE,SACR9B,EAAKQ,SAAS,CAAEvB,WAAW,IAVhB,wBAAAkC,EAAAY,SAAAd,MApBI,gBAAAe,GAAA,OAAAhD,EAAAiD,MAAA/B,KAAAgC,YAAA,GAGjBlC,EAAKmC,MAAQ,CACTlD,WAAW,EACbmD,MAAO,GACPC,SAAU,IANKrC,8EAWjB,OAAOE,KAAKiC,MAAMC,MAAME,OAAS,GAAKpC,KAAKiC,MAAME,SAASC,OAAS,mCAyBnE,OACE7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAO3D,UAAU,SAAS4D,IAAKC,IAAMC,YAAU,IACjDjE,EAAAC,EAAAC,cAAA,QAAMgE,SAAUzC,KAAKW,cACnBpC,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAWC,UAAU,QAAQC,OAAO,SAClCrE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,cACAtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,QACLtC,MAAOV,KAAKiC,MAAMC,MAClBe,SAAUjD,KAAKI,gBAGnB7B,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAWC,UAAU,WAAWC,OAAO,SACrCrE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,iBACAtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEpC,MAAOV,KAAKiC,MAAME,SAClBc,SAAUjD,KAAKI,aACf4C,KAAK,cAGTzE,EAAAC,EAAAC,cAACI,EAAD,CACEqE,OAAK,EACLN,OAAO,QACPxD,UAAWY,KAAKmD,eAChBH,KAAK,SACLjE,UAAWiB,KAAKiC,MAAMlD,UACtBC,KAAK,QACLC,YAAY,8BAjEWN,gDCE7ByE,sBACJ,SAAAA,EAAY/D,GAAO,IAAAS,EAAA,OAAAR,OAAAS,EAAA,EAAAT,CAAAU,KAAAoD,IACjBtD,EAAAR,OAAAW,EAAA,EAAAX,CAAAU,KAAAV,OAAAY,EAAA,EAAAZ,CAAA8D,GAAAjD,KAAAH,KAAMX,KAwBRe,aAAe,SAAAC,GACbP,EAAKQ,SAAS,CACZI,MAAOL,EAAMG,OAAOE,SA3BLZ,EA+BnBa,aA/BmB,eAAA7B,EAAAQ,OAAAsB,EAAA,EAAAtB,CAAAuB,EAAArC,EAAAsC,KA+BJ,SAAAC,EAAMV,GAAN,OAAAQ,EAAArC,EAAAwC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACbd,EAAMe,iBACN,IACEtB,EAAKT,MAAMmC,QAAQC,KAAK,CACtB4B,SAAU,wBACVpB,MAAO,CACLqB,SAAWxD,EAAKmC,MAAMqB,SACxBC,WAAazD,EAAK0D,gBAClBC,OAAS3D,EAAKmC,MAAMwB,OACtB/C,MAASZ,EAAKmC,MAAMvB,SAEpB,MAAOgB,GACPC,MAAMD,EAAEE,SACR9B,EAAKQ,SAAS,CAAEvB,WAAW,IAbhB,wBAAAkC,EAAAY,SAAAd,MA/BI,gBAAAe,GAAA,OAAAhD,EAAAiD,MAAA/B,KAAAgC,YAAA,GAAAlC,EAgDnB4D,aAAe,SAACrD,GACdP,EAAKQ,SAAS,CAACgD,SAAUxD,EAAK6D,SAASjD,SAjDtBZ,EAmDnB8D,oBAAsB,SAACvD,GACrBP,EAAKQ,SAAS,CAACmD,OAAQpD,EAAMG,OAAOE,SApDnBZ,EAuDnB+D,yBAA2B,SAAAnC,GACzB5B,EAAKQ,SAAS,CACZwD,kBAAkB,KAzDHhE,EA4DnBiE,oBAAsB,SAAArC,GACpB5B,EAAKQ,SAAS,CACZwD,kBAAkB,KA9DHhE,EAkEnBkE,iBAAmB,WAEjB,OACEzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAWC,UAAU,KAAKC,OAAO,SAC7BrE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,kBACAtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEpC,MAAOZ,EAAKmC,MAAMvB,MAClBuC,SAAUnD,EAAKM,aAAa6D,KAAlB3E,OAAA4E,EAAA,EAAA5E,CAAAQ,IACVkD,KAAK,cA3EElD,EAkFnBqE,cAAgB,WAEd,OACE5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAWC,UAAU,sBAAsBC,OAAO,SAC9CrE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,iBACAtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAasB,eAAe,SAASC,YAAY,MAAMV,SAAU,SAACW,GAASxE,EAAK6D,SAAWW,GACtFrB,SAAUnD,EAAK4D,cAChBnF,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,OAAd,OACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,kBAAd,kBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,iBAAd,iBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,oBAAd,oBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,0BAAd,0BACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,YAAd,YACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,qBAAd,qBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,YAAd,YACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,cAAd,cACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,gBAAd,gBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,WACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,kBAAd,kBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,aAAd,aACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,YAAd,YACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,YAAd,YACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,YAAd,YACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,YAAd,YACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,WACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,OAAd,OACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,eAAd,eACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,aAAd,aACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,iBAAd,iBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,gBAAd,gBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,SAAd,SACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,cAAd,cACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,gBAAd,gBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,cAAd,cACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,SAAd,SACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,QAAd,QACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,WACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,oBAAd,oBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,WACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,iBAAd,iBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,cAAd,cACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,aAAd,aACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,eAAd,iBAIJnC,EAAAC,EAAAC,cAACiE,EAAA,EAAD,KACAnE,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAOC,KAAK,aAAaC,QAAM,EAC/BC,gBAAc,EACdC,QAAS7E,EAAK+D,yBAAyBI,KAA9B3E,OAAA4E,EAAA,EAAA5E,CAAAQ,KAFT,sBAIS,IACTvB,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAOC,KAAK,aAAaC,QAAM,EAACE,QAAS7E,EAAKiE,oBAAoBE,KAAzB3E,OAAA4E,EAAA,EAAA5E,CAAAQ,KAAzC,mBAES,KAEZA,EAAKmC,MAAM6B,iBAAmBvF,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAWC,UAAU,YAAYC,OAAO,SACnErE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,mBACAtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,OACLtC,MAAOZ,EAAKmC,MAAMvB,MAClBuC,SAAUnD,EAAKM,aAAa6D,KAAlB3E,OAAA4E,EAAA,EAAA5E,CAAAQ,OAECvB,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAWC,UAAU,KAAKC,OAAO,SAC9CrE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,kBACAtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEpC,MAAOZ,EAAKmC,MAAMvB,MAClBuC,SAAUnD,EAAKM,aAAa6D,KAAlB3E,OAAA4E,EAAA,EAAA5E,CAAAQ,IACVkD,KAAK,cAxJElD,EA+JnB8E,6BAA+B,WAE7B,OACErG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAWC,UAAU,sBAAsBC,OAAO,SAC9CrE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,sBACAtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAasB,eAAe,SAASC,YAAY,SAASV,SAAU,SAACW,GAASxE,EAAK6D,SAAWW,GACzFrB,SAAUnD,EAAK4D,cAChBnF,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,IAAd,cACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,4BACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,2BACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,8BACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,oCACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,sBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,+BACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,sBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,wBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,0BACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,qBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,4BACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,uBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,sBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,sBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,sBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,sBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,qBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,iBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,yBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,uBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,2BACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,0BACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,mBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,wBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,0BACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,wBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,mBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,kBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,qBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,qBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,2BACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,wBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,uBACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,WAAd,2BAIJnC,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAWC,UAAU,YAAYC,OAAO,SACxCrE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,mBACAtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,OACLtC,MAAOZ,EAAKmC,MAAMvB,MAClBuC,SAAUnD,EAAKM,aAAa6D,KAAlB3E,OAAA4E,EAAA,EAAA5E,CAAAQ,SAnNHA,EA0NnB+E,kBAAoB,WAClB,OACItG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,4CA7NWqB,EAkOnBgF,eAAiB,WACf,MAAyB,QAAtBhF,EAAKmC,MAAMwB,OACL3D,EAAKqE,gBACiB,aAAtBrE,EAAKmC,MAAMwB,OACX3D,EAAKkE,mBACkB,UAAtBlE,EAAKmC,MAAMwB,OACZ3D,EAAK8E,oCAEZ9E,EAAK+E,qBAvOP/E,EAAKmC,MAAQ,CACTlD,WAAW,EACbuE,SAAU,MACVG,OAAS,MACTK,kBAAkB,EAClBpD,WAAOqE,GARQjF,8EAajB,OAAO,0CAKP,OAAGE,KAAKiC,MAAM6B,iBACL,UAEA,sCA0NF,IAAAkB,EAAAhF,KACDiF,EAAUjF,KAAK8E,iBACrB,OACEvG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAO3D,UAAU,SAAS4D,IAAKC,IAAMC,YAAU,IACjDjE,EAAAC,EAAAC,cAAA,QAAMgE,SAAUzC,KAAKW,cACrBpC,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAWC,UAAU,sBAAsBC,OAAO,SAC9CrE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,gBACAtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAasB,eAAe,SAASC,YAAY,MAAMa,OAAQ,SAACZ,GAASU,EAAKE,OAASZ,GAClFrB,SAAUjD,KAAK4D,qBAChBrF,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,OAAd,OACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,YAAd,YACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,QAAd,QACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,SAAd,SACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,QAAd,QACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,QAAd,QACAnC,EAAAC,EAAAC,cAAA,UAAQiC,MAAM,iBAAd,mBAGHuE,EACH1G,EAAAC,EAAAC,cAACI,EAAD,CACEqE,OAAK,EACLN,OAAO,QACPxD,UAAWY,KAAKmD,eAChBH,KAAK,SACLjE,UAAWiB,KAAKiC,MAAMlD,UACtBC,KAAK,OACLC,YAAY,6BA3QCN,cAmRVwG,cAAW/B,qGCzRLgC,6MAGjBC,aAAe,WACX,OACI9G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,yBAMR4G,UAAY,WACR,OACQ/G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACHH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACVH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,UAAKqB,EAAKT,MAAMkG,QAAQC,OAExBjH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAKqB,EAAKT,MAAMkG,QAAQE,WAExBlH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UAAKqB,EAAKT,MAAMkG,QAAQG,UAExBnH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UAAKqB,EAAKT,MAAMkG,QAAQI,YAGxBpH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,UAAKqB,EAAKT,MAAMkG,QAAQK,IAExBrH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAKqB,EAAKT,MAAMkG,QAAQM,WAExBtH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAKqB,EAAKT,MAAMkG,QAAQO,WAExBvH,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,UAAKqB,EAAKT,MAAMkG,QAAQQ,KAExBxH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAKqB,EAAKT,MAAMkG,QAAQS,WAExBzH,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,UAAKqB,EAAKT,MAAMkG,QAAQU,MAExB1H,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UAAKqB,EAAKT,MAAMkG,QAAQW,QAExB3H,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UAAKqB,EAAKT,MAAMkG,QAAQY,UAExB5H,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UAAKqB,EAAKT,MAAMkG,QAAQa,UAExB7H,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,UAAKqB,EAAKT,MAAMkG,QAAQc,eAExB9H,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UAAKqB,EAAKT,MAAMkG,QAAQe,wFAQhD,IAAMrB,EAAiC,KAAvBjF,KAAKX,MAAMkG,QAAiBvF,KAAKqF,eAAiBrF,KAAKsF,YACvE,OACI/G,EAAAC,EAAAC,cAAA,WAAMwG,UArE8BtG,iCCE3B4H,8MAIjBC,sBAAwB,SAACC,EAAYzD,GACjC,YAAmB+B,IAAhB0B,EACQ,KACM,YAAPzD,EAGFzE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,eAC8C,KAAzCgI,EAAYC,mBAAmBC,YAAyD5B,IAAzC0B,EAAYC,mBAAmBC,MAAsB,KAASF,EAAYC,mBAAmBC,MADjJ,IACkM,KAAzCF,EAAYC,mBAAmBC,YAAyD5B,IAAzC0B,EAAYC,mBAAmBC,MAAsB,KAAOpI,EAAAC,EAAAC,cAAA,WACtN,KAAzCgI,EAAYC,mBAAmBE,YAAyD7B,IAAzC0B,EAAYC,mBAAmBE,MAAsB,KAAOH,EAAYC,mBAAmBE,MAF/I,IAEgM,KAAzCH,EAAYC,mBAAmBE,YAAyD7B,IAAzC0B,EAAYC,mBAAmBE,MAAsB,KAAOrI,EAAAC,EAAAC,cAAA,WACpN,KAAzCgI,EAAYC,mBAAmBG,YAAyD9B,IAAzC0B,EAAYC,mBAAmBI,MAAsB,KAAOL,EAAYC,mBAAmBG,MAH/I,IAGgM,KAAzCJ,EAAYC,mBAAmBI,YAAyD/B,IAAzC0B,EAAYC,mBAAmBI,MAAsB,KAAOvI,EAAAC,EAAAC,cAAA,WACpN,KAAzCgI,EAAYC,mBAAmBK,YAAyDhC,IAAzC0B,EAAYC,mBAAmBK,MAAsB,KAAON,EAAYC,mBAAmBK,MAJ/I,IAIgM,KAAzCN,EAAYC,mBAAmBK,YAAyDhC,IAAzC0B,EAAYC,mBAAmBK,MAAsB,KAAOxI,EAAAC,EAAAC,cAAA,WAC/M,KAA9CgI,EAAYC,mBAAmBM,iBAAmEjC,IAA9C0B,EAAYC,mBAAmBM,WAA2B,KAAOP,EAAYC,mBAAmBM,aAM7JzI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACmC,KAApC+H,EAAYQ,UAAUxB,UAAmB,KAAOlH,EAAAC,EAAAC,cAAA,WACjDF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,UAAKgI,EAAYQ,UAAUxB,YAGiB,KAAvCgB,EAAYQ,UAAUC,aAAsB,KAAO3I,EAAAC,EAAAC,cAAA,WACxDF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,UAAKgI,EAAYQ,UAAUC,eAGmC,KAAzDT,EAAYQ,UAAUE,eAAeC,gBAAyB,KAAO7I,EAAAC,EAAAC,cAAA,WAC1EF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UAAKgI,EAAYQ,UAAUE,eAAeC,mBAItD7I,EAAAC,EAAAC,cAAC4I,GAAA,EAAD,KACI9I,EAAAC,EAAAC,cAAC4I,GAAA,EAAMC,QAAP,KACA/I,EAAAC,EAAAC,cAAC4I,GAAA,EAAM7B,MAAP,CAAapB,eAAe,MAA5B,wBAEA7F,EAAAC,EAAAC,cAAC4I,GAAA,EAAME,KAAP,KACQhJ,EAAAC,EAAAC,cAAA,eACmE,KAAlEgI,EAAYQ,UAAUE,eAAeT,mBAAmBC,YAAkF5B,IAAlE0B,EAAYQ,UAAUE,eAAeT,mBAAmBC,MAAsB,KAAQF,EAAYQ,UAAUE,eAAeT,mBAAmBC,MADvN,IACiS,KAAlEF,EAAYQ,UAAUE,eAAeT,mBAAmBC,YAAkF5B,IAAlE0B,EAAYQ,UAAUE,eAAeT,mBAAmBC,MAAsB,KAAOpI,EAAAC,EAAAC,cAAA,WACzT,KAAlEgI,EAAYQ,UAAUE,eAAeT,mBAAmBE,YAAkF7B,IAAlE0B,EAAYQ,UAAUE,eAAeT,mBAAmBE,MAAqB,KAAQH,EAAYQ,UAAUE,eAAeT,mBAAmBE,MAFtN,IAEgS,KAAlEH,EAAYQ,UAAUE,eAAeT,mBAAmBE,YAAkF7B,IAAlE0B,EAAYQ,UAAUE,eAAeT,mBAAmBE,MAAsB,KAAOrI,EAAAC,EAAAC,cAAA,WACxT,KAAlEgI,EAAYQ,UAAUE,eAAeT,mBAAmBI,YAAkF/B,IAAlE0B,EAAYQ,UAAUE,eAAeT,mBAAmBI,MAAsB,KAAQL,EAAYQ,UAAUE,eAAeT,mBAAmBI,MAHvN,IAGiS,KAAlEL,EAAYQ,UAAUE,eAAeT,mBAAmBI,YAAkF/B,IAAlE0B,EAAYQ,UAAUE,eAAeT,mBAAmBI,MAAsB,KAAOvI,EAAAC,EAAAC,cAAA,WACzT,KAAlEgI,EAAYQ,UAAUE,eAAeT,mBAAmBK,YAAkFhC,IAAlE0B,EAAYQ,UAAUE,eAAeT,mBAAmBK,MAAsB,KAAQN,EAAYQ,UAAUE,eAAeT,mBAAmBK,MAJvN,IAIiS,KAAlEN,EAAYQ,UAAUE,eAAeT,mBAAmBK,YAAkFhC,IAAlE0B,EAAYQ,UAAUE,eAAeT,mBAAmBK,MAAsB,KAAOxI,EAAAC,EAAAC,cAAA,WACpT,KAAvEgI,EAAYQ,UAAUE,eAAeT,mBAAmBM,iBAA4FjC,IAAvE0B,EAAYQ,UAAUE,eAAeT,mBAAmBM,WAA2B,KAAQP,EAAYQ,UAAUE,eAAeT,mBAAmBM,kBAc7PQ,wBAA0B,qFAKtBC,QAAQC,IAAI,wBAAyB1H,KAAKX,MAAMkG,SAChD,IAAMoC,EAAO3H,KAAKwG,sBAAsBxG,KAAKX,MAAMkG,QAAS,WACtDqC,EAAS5H,KAAKwG,sBAAsBxG,KAAKX,MAAMkG,QAAS,OAC9D,OACChH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACaqG,IAAvB/E,KAAKX,MAAMkG,QAAwBhH,EAAAC,EAAAC,cAAA,iCAAgCF,EAAAC,EAAAC,cAACoJ,GAAA,EAAD,CAAYC,WAAS,EAACrH,GAAG,aAC1FlC,EAAAC,EAAAC,cAAC4I,GAAA,EAAD,CAAOU,SAAS,KACZxJ,EAAAC,EAAAC,cAAC4I,GAAA,EAAMC,QAAP,KACA/I,EAAAC,EAAAC,cAAC4I,GAAA,EAAM7B,MAAP,CAAawC,QAAM,GAAnB,wBAEAzJ,EAAAC,EAAAC,cAAC4I,GAAA,EAAME,KAAP,CAAYU,aAAW,GACFN,IAGzBpJ,EAAAC,EAAAC,cAAC4I,GAAA,EAAD,CAAOU,SAAS,KACZxJ,EAAAC,EAAAC,cAAC4I,GAAA,EAAMC,QAAP,KACA/I,EAAAC,EAAAC,cAAC4I,GAAA,EAAM7B,MAAP,CAAawC,QAAM,GAAnB,gBAEAzJ,EAAAC,EAAAC,cAAC4I,GAAA,EAAME,KAAP,CAAYU,aAAW,GAClBL,aAxFsBjJ,0CCI1BuJ,eAEjB,SAAAA,EAAY7I,GAAM,IAAAS,EAAA,OAAAR,OAAAS,EAAA,EAAAT,CAAAU,KAAAkI,IACdpI,EAAAR,OAAAW,EAAA,EAAAX,CAAAU,KAAAV,OAAAY,EAAA,EAAAZ,CAAA4I,GAAA/H,KAAAH,KAAMX,KA6BV8I,kBA9BkB7I,OAAAsB,EAAA,EAAAtB,CAAAuB,EAAArC,EAAAsC,KA8BE,SAAAC,IAAA,OAAAF,EAAArC,EAAAwC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAMhBrB,EAAKQ,SAAS,CAAC8H,KAAOtI,EAAKT,MAAMkG,UANjB,wBAAAtE,EAAAY,SAAAd,MA5BhBjB,EAAKuI,WAAavI,EAAKuI,WAAWpE,KAAhB3E,OAAA4E,EAAA,EAAA5E,CAAAQ,IAClBA,EAAKwI,YAAcxI,EAAKwI,YAAYrE,KAAjB3E,OAAA4E,EAAA,EAAA5E,CAAAQ,IACnBA,EAAKmC,MAAQ,CACTmG,KAAO,GACPG,MAAO,EACPtD,aAAUF,EACVyD,SAAW,IARD1I,6EAadE,KAAKM,SAAS,CAAEiI,MAAM,yCAItBvI,KAAKM,SAAS,CAAEiI,MAAM,sDAGAE,qCAmBlB,IAAAzD,EAAAhF,KAyBI0I,EAAY,CAChBC,kBAAkB,EAClBC,SAAU,SAAAC,GAAG,OACXtK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACTH,EAAAC,EAAAC,cAACqK,EAAA,EAAD,KACIvK,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAQmF,QAAU,WAEdK,EAAK1E,SAAS,CAACkI,SAAWK,EAAKN,MAAO,EAAMtD,QAAU,cAEvD8D,QAAQ,QAJX,oBAKAxK,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAQmF,QAAU,WAElBK,EAAK1E,SAAS,CAACkI,SAAWK,EAAKN,MAAO,EAAMtD,QAAU,aAEnD8D,QAAQ,QAJX,uBAURC,EAA6B,aAAvBhJ,KAAKiC,MAAMgD,QAAwB1G,EAAAC,EAAAC,cAACwK,EAAD,CAAoB1D,QAASvF,KAAKiC,MAAMuG,WAAcjK,EAAAC,EAAAC,cAACyK,GAAD,CAAmB3D,QAASvF,KAAKiC,MAAMuG,SAASrB,iBAEvJ,OACC5I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAC0K,EAAA,EAAD,CAAOzK,UAAU,SAAS6J,KAAMvI,KAAKiC,MAAMsG,KAAMa,OAAQpJ,KAAKsI,aACjE/J,EAAAC,EAAAC,cAAC0K,EAAA,EAAME,OAAP,CAAcC,aAAW,GACvB/K,EAAAC,EAAAC,cAAC0K,EAAA,EAAM3D,MAAP,iBAEFjH,EAAAC,EAAAC,cAAC0K,EAAA,EAAM5B,KAAP,KAEGyB,GAGHzK,EAAAC,EAAAC,cAAC0K,EAAA,EAAMI,OAAP,KACEhL,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAQmF,QAAS3E,KAAKsI,aAAtB,WAGJ/J,EAAAC,EAAAC,cAAC+K,GAAAhL,EAAD,CACYiL,SAAO,EACPC,OAAK,EACLC,SAAS,WACTvB,KAAOpI,KAAKiC,MAAMmG,KAClBwB,QAlEI,CAAE,CACdC,UAAW,YACX7K,KAAM,aACL,CACD6K,UAAW,WACX7K,KAAM,WACN8K,MAAM,GAGR,CACED,UAAW,KACX7K,KAAM,iBACL,CACD6K,UAAW,WACX7K,KAAM,WACN8K,MAAM,IAoDEC,UAjDQ,CAChBC,KAAM,QACNC,eAAe,EACfC,eAAe,GA+CPxB,UAAYA,YA9GqB/J,aCJhCwL,eAEjB,SAAAA,EAAY9K,GAAM,IAAAS,EAAA,OAAAR,OAAAS,EAAA,EAAAT,CAAAU,KAAAmK,IACdrK,EAAAR,OAAAW,EAAA,EAAAX,CAAAU,KAAAV,OAAAY,EAAA,EAAAZ,CAAA6K,GAAAhK,KAAAH,KAAMX,KAgBV8I,kBAjBkB7I,OAAAsB,EAAA,EAAAtB,CAAAuB,EAAArC,EAAAsC,KAiBE,SAAAC,IAAA,IAAAqJ,EAAA,OAAAvJ,EAAArC,EAAAwC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YACwB4D,IAArCjF,EAAKT,MAAMkG,QAAQ8E,gBACH,GACfD,EAAWtK,EAAKT,MAAMkG,QAAQ8E,cAAc,GAAGC,mBAC/CxK,EAAKQ,SAAS,CAAC8H,KAAOgC,KAJV,wBAAAnJ,EAAAY,SAAAd,MAfhBjB,EAAKmC,MAAQ,CACTmG,KAAO,IAHGtI,yFAOQ2I,GACtB,QAAuC1D,IAApC0D,EAAUlD,QAAQ8E,cAA4B,CAC7C,IAAID,EACJA,EAAW3B,EAAUlD,QAAQ8E,cAAc,GAAGC,mBAC9CtK,KAAKM,SAAS,CAAC8H,KAAOgC,SAEtBpK,KAAKM,SAAS,CAAC8H,KAAO,sCAsF1B,OAEQ7J,EAAAC,EAAAC,cAAC+K,GAAAhL,EAAD,CACIiL,SAAO,EACPC,OAAK,EACLC,SAAS,qBACTvB,KAAOpI,KAAKiC,MAAMmG,KAClBwB,QAhFI,CAAC,CACbC,UAAW,cACX7K,KAAM,eACL,CACD6K,UAAW,MACX7K,KAAM,OACL,CACD6K,UAAW,SACX7K,KAAM,SACN8K,MAAM,GAEN,CACAD,UAAW,mBACX7K,KAAM,oBAER,CACE6K,UAAW,WACX7K,KAAM,YACL,CACD6K,UAAW,aACX7K,KAAM,cACL,CACD6K,UAAW,qBACX7K,KAAM,sBAGN,CACA6K,UAAW,iBACX7K,KAAM,kBACL,CACD6K,UAAW,gBACX7K,KAAM,iBACL,CACD6K,UAAW,aACX7K,KAAM,cAGN,CACA6K,UAAW,gBACX7K,KAAM,iBACL,CACD6K,UAAW,iBACX7K,KAAM,kBACL,CACD6K,UAAW,mBACX7K,KAAM,oBAEN,CACA6K,UAAW,aACX7K,KAAM,cAEP,CACC6K,UAAW,aACX7K,KAAM,cAEL,CACD6K,UAAW,UACX7K,KAAM,WAEL,CACD6K,UAAW,eACX7K,KAAM,gBAEL,CACD6K,UAAW,oBACX7K,KAAM,qBAEL,CACD6K,UAAW,WACX7K,KAAM,sBAjG2BL,aCExB4L,oLAGb,OADA9C,QAAQC,IAAI1H,KAAKX,OAEbd,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,CAAMC,iBAAkB,EAAGhK,GAAG,eAC1BlC,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAK3C,SAAU,EAAI4C,MAAM,iBACrBpM,EAAAC,EAAAC,cAACmM,GAAD,CAAiBrF,QAASvF,KAAKX,MAAMmJ,YAEzCjK,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAK3C,SAAU,EAAI4C,MAAM,kBACrBpM,EAAAC,EAAAC,cAACoM,GAAD,CAAyBtF,QAASvF,KAAKX,MAAMyL,wBATbnM,aCH/BoM,oLAEb,OACCxM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACRH,EAAAC,EAAAC,cAACoJ,GAAA,EAAD,CAAYC,WAAS,EAACrH,GAAG,aACzBlC,EAAAC,EAAAC,cAAC4I,GAAA,EAAD,CAAOU,SAAS,KACRxJ,EAAAC,EAAAC,cAAC4I,GAAA,EAAMC,QAAP,KACA/I,EAAAC,EAAAC,cAAC4I,GAAA,EAAM7B,MAAP,CAAawC,QAAM,GAAnB,kBAEAzJ,EAAAC,EAAAC,cAAC4I,GAAA,EAAME,KAAP,CAAYU,aAAW,GACX1J,EAAAC,EAAAC,cAAA,WACQF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAEdH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UAAKuB,KAAKX,MAAMkG,QAAQjC,UACpB/E,EAAAC,EAAAC,cAAA,+BACJF,EAAAC,EAAAC,cAAA,UAAKuB,KAAKX,MAAMkG,QAAQyF,eAExBzM,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,UAAKuB,KAAKX,MAAMkG,QAAQ0F,6BAOhD1M,EAAAC,EAAAC,cAAC4I,GAAA,EAAD,CAAOU,SAAS,KACZxJ,EAAAC,EAAAC,cAAC4I,GAAA,EAAMC,QAAP,KACA/I,EAAAC,EAAAC,cAAC4I,GAAA,EAAM7B,MAAP,CAAawC,QAAM,GAAnB,cAEAzJ,EAAAC,EAAAC,cAAC4I,GAAA,EAAME,KAAP,CAAYU,aAAW,GACX1J,EAAAC,EAAAC,cAAA,WACKuB,KAAKX,MAAMkG,QAAQ2F,sBAhCjBvM,aCItBwM,oLAEb,OACI5M,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,CAAMC,iBAAkB,EAAGhK,GAAG,eAC1BlC,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAK3C,SAAU,EAAG4C,MAAM,oBACpBpM,EAAAC,EAAAC,cAACwK,EAAD,CAAoB1D,QAASvF,KAAKX,MAAMmJ,YAE5CjK,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAK3C,SAAU,EAAG4C,MAAM,mBACpBpM,EAAAC,EAAAC,cAACyK,GAAD,CAAoB3D,QAASvF,KAAKX,MAAMmJ,SAASrB,kBAErD5I,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAK3C,SAAU,EAAG4C,MAAM,eACpBpM,EAAAC,EAAAC,cAAC2M,GAAD,CAAe7F,QAAWvF,KAAKX,MAAMmJ,oBAXb7J,kCCGvB0M,eAEnB,SAAAA,IAAa,IAAAvL,EAAA,OAAAR,OAAAS,EAAA,EAAAT,CAAAU,KAAAqL,IACXvL,EAAAR,OAAAW,EAAA,EAAAX,CAAAU,KAAAV,OAAAY,EAAA,EAAAZ,CAAA+L,GAAAlL,KAAAH,QAiBFsL,YAlBa,eAAAxM,EAAAQ,OAAAsB,EAAA,EAAAtB,CAAAuB,EAAArC,EAAAsC,KAkBE,SAAAC,EAAOL,EAAO4C,EAAUC,GAAxB,IAAAgI,EAAAC,EAAAC,EAAAC,EAAA,OAAA7K,EAAArC,EAAAwC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACToK,EAAM,GAGRA,EADgC,UAA/BzL,EAAKT,MAAMsM,SAASlI,OAClB,mFAAA/D,OAAsFgB,EAAtF,kBAAAhB,OAA4G4D,GAEjG,QAAXA,EACe,YAAbC,EAEE,+GAAA7D,OAAkHgB,GAGlH,qGAAAhB,OAAwGgB,GAGvF,YAAf6C,EAEJ,yGAAA7D,OAA4GgB,EAA5G,cAAAhB,OAA8H4D,GAG9H,yFAAA5D,OAA4FgB,EAA5F,cAAAhB,OAA8G4D,GApBxGrC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EA2BKyK,MAAML,EACpB,CACEvB,KAAO,OACP6B,OAAS,MACTC,QAAU,CACRC,OAAU,mBACVC,eAAiB,mBACjBC,8BAA+B,IAC/BC,WAAc,gBAnCT,cA2BPV,EA3BOvK,EAAAkL,KAAAlL,EAAAE,KAAA,EAsCQqK,EAAIY,OAtCZ,OAsCTX,EAtCSxK,EAAAkL,KAuCO,MAAfX,EAAIa,QACyB,MAA3BZ,EAASa,gBAEJZ,EAASD,EAASa,eAAeC,IAAI,SAAAvD,GACzC,MACE,CAACvI,GAAKuI,EAAIwD,WAAJ,EACN5G,GAAKoD,EAAIpD,GAAJ,EACLJ,MAAQwD,EAAIxD,MACVC,UAAYuD,EAAIvD,UAChBC,SAAWsD,EAAItD,SACfC,WAAaqD,EAAIrD,WACjBO,OAAS8C,EAAI9C,OACbL,UAAYmD,EAAInD,UAChBC,UAAYkD,EAAIlD,UAChBC,IAAMiD,EAAIjD,IACVE,KAAO+C,EAAI/C,KACXI,cAAgB2C,EAAI3C,cACpBD,SAAW4C,EAAI5C,SACfD,SAAW6C,EAAI7C,SACfG,YAAc0C,EAAI1C,YAClB4E,UAAYlC,EAAIkC,UAChB5H,SAAW0F,EAAI,aACfgC,cAAgBhC,EAAIgC,cACpBC,wBAA0BjC,EAAIiC,wBAC9B9D,eAAiB,CACfT,mBAAoB,CAClBC,MAAOqC,EAAI7B,eAAeT,mBAAmBC,MAC7CC,MAAOoC,EAAI7B,eAAeT,mBAAmBE,MAC7CC,MAAOmC,EAAI7B,eAAeT,mBAAmBI,MAC7CC,MAAOiC,EAAI7B,eAAeT,mBAAmBK,MAC7CC,WAAYgC,EAAI7B,eAAeT,mBAAmBM,YAEpDC,UAAY+B,EAAI/B,WAElBwF,WAAa,CACXvB,UAAWlC,EAAIkC,cAKQ,aAA/BpL,EAAKT,MAAMsM,SAASlI,OAAwB3D,EAAKQ,SAAS,CAACoM,SAAWhB,EAAQ3M,WAAY,IAAUe,EAAKQ,SAAS,CAAC8H,KAAOsD,EAAQ3M,WAAY,KAM9Ie,EAAKQ,SAAS,CAACvB,WAAW,IArFnBkC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA0L,GAAA1L,EAAA,SAwFLnB,EAAKQ,SAAS,CAACvB,WAAW,IAxFrB,yBAAAkC,EAAAY,SAAAd,EAAA,kBAlBF,gBAAAe,EAAA8K,EAAAC,GAAA,OAAA/N,EAAAiD,MAAA/B,KAAAgC,YAAA,GAAAlC,EA8GbgN,kBAAoB,WAClBhN,EAAKmC,MAAM8K,QAAUjN,EAAKQ,SAAS,CAAC8H,KAAOtI,EAAKmC,MAAM+K,MAAMtN,OAAOI,EAAKmC,MAAMgL,SAAWnN,EAAKQ,SAAS,CAAC8H,KAAOtI,EAAKmC,MAAM+K,SA/G/GlN,EAkHboN,iBAlHa,eAAAC,EAAA7N,OAAAsB,EAAA,EAAAtB,CAAAuB,EAAArC,EAAAsC,KAkHM,SAAAsM,EAAM1M,GAAN,IAAA6K,EAAAC,EAAAC,EAAA4B,EAAAC,EAAAC,EAAAC,EAAA,OAAA3M,EAAArC,EAAAwC,KAAA,SAAAyM,GAAA,cAAAA,EAAAvM,KAAAuM,EAAAtM,MAAA,cACjBrB,EAAKQ,SAAS,CAACvB,WAAY,IACxBwM,EAFc,sFAAA7L,OAE8EgB,GAF9E+M,EAAAvM,KAAA,EAAAuM,EAAAtM,KAAA,EAIDyK,MAAML,EACpB,CACEvB,KAAO,OACP6B,OAAS,MACTC,QAAU,CACRC,OAAU,mBACVC,eAAiB,mBACjBC,8BAA+B,IAC/BC,WAAc,gBAZH,cAIbV,EAJaiC,EAAAtB,KAAAsB,EAAAtM,KAAA,EAeEqK,EAAIY,OAfN,OAefX,EAfegC,EAAAtB,KAgBfkB,EAAa,GAAGC,EAAa,GACf,MAAf9B,EAAIa,QACyB,MAA3BZ,EAASa,gBACVb,EAASa,eAAeC,IAAI,SAAAvD,GAC1B,YAAwBjE,IAArBiE,EAAI,aAC8B,YAA3BA,EAAI,mBAAmCqE,EAAW5L,KAAKuH,GAAOsE,EAAW7L,KAAKuH,GAE/E,OAILuE,EAASF,EAAWd,IAAI,SAAAmB,GAC5B,MACE,CACE9H,GAAK8H,EAAErD,cAAc,GAAGC,mBAAmB,GAAGqD,eAC9CC,SAAWF,EAAE,aACbrD,cAAgBqD,EAAErD,iBAIlBmD,EAASF,EAAWf,IAAI,SAAAmB,GAC5B,MACE,CACEE,SAAWF,EAAE,aACbjC,SAAWiC,EAAE,sBAKnB5N,EAAKQ,SAAS,CAAC8H,KAAOmF,EAAQP,MAAQO,EAAQN,MAAQO,EAAQzO,WAAY,KAM1Ee,EAAKQ,SAAS,CAACvB,WAAW,IAnDX0O,EAAAtM,KAAA,iBAAAsM,EAAAvM,KAAA,GAAAuM,EAAAd,GAAAc,EAAA,SAsDjB3N,EAAKQ,SAAS,CAACvB,WAAW,IAtDT,yBAAA0O,EAAA5L,SAAAuL,EAAA,kBAlHN,gBAAAS,GAAA,OAAAV,EAAApL,MAAA/B,KAAAgC,YAAA,GAAAlC,EAiMbgO,UAAY,WACX,OACGvP,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,6BAnMIqB,EAuMbiO,aAAe,WACb,IAAMtK,EAAS3D,EAAKT,MAAMsM,SAASlI,OACnC,MAAc,QAAXA,GAA+B,UAAXA,EACd,CAAC,CACNoG,UAAW,KACX7K,KAAM,cACL,CACD6K,UAAW,KACX7K,KAAM,MACL,CACD6K,UAAW,WACX7K,KAAM,WACN8K,MAAM,IAGU,aAAXrG,EACA,CAAE,CACPoG,UAAW,WACX7K,KAAM,WACN8K,MAAM,IAID,MA9NEhK,EAkObkO,cAAgB,WACV,MAAO,CAAC,CACNnE,UAAW,KACX7K,KAAM,cACL,CACD6K,UAAW,KACX7K,KAAM,MACL,CACD6K,UAAW,WACX7K,KAAM,WACN8K,MAAM,KA5ODhK,EAiPbmO,UAAY,SAACvN,GACX,MAAa,aAAVA,EAECnC,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,gBAAOF,EAAAC,EAAAC,cAAA,0BAAP,KACAF,EAAAC,EAAAC,cAACyP,GAAA1P,EAAD,CAAQyE,SAAUnD,EAAKM,aAAc2M,QAASjN,EAAKmC,MAAM8K,WAItD,MA1PIjN,EAkQbqO,iBAAmB,SAACvE,EAAQG,GAC9B,OACEjK,EAAKmC,MAAMlD,UAAYR,EAAAC,EAAAC,cAAC2P,EAAA5P,EAAD,CAChBwE,KAAK,OACLqL,MAAM,UACNC,OAAO,MACPC,MAAM,MACN7P,UAAU,WACNH,EAAAC,EAAAC,cAAC+P,EAAA,EAAD,KACPjQ,EAAAC,EAAAC,cAACgQ,EAAA,EAAD,CAAK/P,UAAU,aACbH,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAKC,GAAI,EAAGC,OAAQ,GACpBrQ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAACoQ,GAAD,CAAgBrG,SAAU1I,EAAKmC,MAAM6M,eAGvCvQ,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAKC,GAAI,EAAGI,OAAQ,GAClBxQ,EAAAC,EAAAC,cAAC+K,GAAAhL,EAAD,CACUiL,SAAO,EACPC,OAAK,EACLK,UAAYA,EACZJ,SAAU,WACVvB,KAAOtI,EAAKmC,MAAMmG,KAClBwB,QAAUA,QAzRf9J,EAgSbkP,gBAAkB,SAACtN,GACjB5B,EAAKQ,SAAS,CAAC2O,WAAY,KAjShBnP,EAoSboP,sBAAwB,SAACtF,EAAQuF,EAAcpF,GACjD,OACEjK,EAAKmC,MAAMlD,UAAYR,EAAAC,EAAAC,cAAC2P,EAAA5P,EAAD,CAChBwE,KAAK,OACLqL,MAAM,UACNC,OAAO,MACPC,MAAM,MACN7P,UAAU,WACNH,EAAAC,EAAAC,cAAC+P,EAAA,EAAD,KACPjQ,EAAAC,EAAAC,cAACgQ,EAAA,EAAD,CAAK/P,UAAU,aACbH,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAKC,GAAI,EAAGC,OAAQ,GACpBrQ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAC2Q,GAAD,CAAoB5G,SAAU1I,EAAKmC,MAAM6M,WAAYhE,aAAgBhL,EAAKmC,MAAMyK,aAGtFnO,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAKC,GAAI,EAAGI,OAAQ,GAEnBI,EACG5Q,EAAAC,EAAAC,cAAC+K,GAAAhL,EAAD,CACUiL,SAAO,EACPC,OAAK,EACLK,UAAYA,EACZJ,SAAU,WACVvB,KAAOtI,EAAKmC,MAAMmG,KAClBwB,QAAUA,QA3T5B9J,EAAKmC,MAAQ,CACXmG,KAAO,GACP4E,MAAQ,GACRC,MAAQ,GACRP,SAAW,GACX3N,WAAY,EACZ+P,WAAa,GACbG,WAAY,EACZI,SAAW,WACXtC,SAAS,GAEXjN,EAAKM,aAAeN,EAAKM,aAAa6D,KAAlB3E,OAAA4E,EAAA,EAAA5E,CAAAQ,IAbTA,uMA6KXE,KAAKM,SAAS,CAACvB,WAAW,IAE1BwE,EAAavD,KAAKX,MAAMsM,SAASpI,WACjC7C,EAAQV,KAAKX,MAAMsM,SAASjL,MAC5B4C,EAAWtD,KAAKX,MAAMsM,SAASrI,SAGjB,SAFdG,EAASzD,KAAKX,MAAMsM,SAASlI,SAEK,UAAXA,EACrBzD,KAAKsL,YAAY5K,EAAO4C,EAAUC,GAChB,aAAXE,IACPzD,KAAKkN,iBAAiBxM,GACtBV,KAAKsL,YAAY5K,EAAO4C,EAAS,8IAqExByJ,GACX/M,KAAKM,SAAS,CAAEyM,YAChB/M,KAAK8M,qDAuEC,IAAA9H,EAAAhF,KACA4J,EAAU5J,KAAK+N,eAEfoB,EAAgBnP,KAAKiO,UAAUjO,KAAKX,MAAMsM,SAASlI,QACnDsG,EAAY,CAChBC,KAAM,QACNC,eAAgB,EAChBqF,MAAO,CAAEC,gBAAiB,WAC1BC,SAAU,SAAC3G,EAAK4G,EAAUC,EAAUhO,GAClCsD,EAAK1E,SAAS,CAACwO,WAAajG,KAE9B8G,kBAAmB,GAGfC,EAAoC,QAA/B5P,KAAKX,MAAMsM,SAASlI,QAAmD,UAA/BzD,KAAKX,MAAMsM,SAASlI,OAAqBzD,KAAKmO,iBAAiBvE,EAAQG,GAAa/J,KAAKkP,sBAAsBtF,EAASuF,EAAcpF,GAEzL,OACExL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEZkR,UA3V8CjR,aCJlCkR,oLAGb,OACItR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAO3D,UAAU,mBAAmB4D,IAAKC,IAAMC,YAAU,IACzDjE,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAACqR,GAAD,CAAcnE,SAAU3L,KAAKX,MAAM0Q,SAAS9N,gBAPVtD,aCD7BqR,oLAEb,OACIzR,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,CAAMC,iBAAkB,EAAGhK,GAAG,eAC1BlC,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAK3C,SAAU,EAAG4C,MAAM,WACpBpM,EAAAC,EAAAC,cAACwR,EAAD,OAEJ1R,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAK3C,SAAU,EAAG4C,MAAM,UAAUvL,UAAQ,GAA1C,WAGAb,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAK3C,SAAU,EAAG4C,MAAM,UAAUvL,UAAQ,GAA1C,mBAVqBT,aCFtBuR,GAAA,SAAApR,GAAA,IAAcqR,EAAdrR,EAAGsR,UAAqBC,EAAxBvR,EAAiBO,MAAkBiR,EAAnChR,OAAAC,EAAA,EAAAD,CAAAR,EAAA,8BACbP,EAAAC,EAAAC,cAAC8R,EAAA,EAADjR,OAAAG,OAAA,GAAW6Q,EAAX,CAAiBE,OAAQ,SAAAnR,GAAK,OAAId,EAAAC,EAAAC,cAAC0R,EAAD7Q,OAAAG,OAAA,GAAOJ,EAAWgR,SCMvCI,GAAA,SAAA3R,GAAA,IAAG4R,EAAH5R,EAAG4R,WAAH,OACbnS,EAAAC,EAAAC,cAACkS,EAAA,EAAD,KACEpS,EAAAC,EAAAC,cAACyR,GAAD,CAAcU,KAAK,IAAIC,OAAK,EAACT,UAAW9R,EAAMe,MAAOqR,IACrDnS,EAAAC,EAAAC,cAACyR,GAAD,CAAcU,KAAK,SAASC,OAAK,EAACT,UAAWvQ,EAAOR,MAAOqR,IAC3DnS,EAAAC,EAAAC,cAACyR,GAAD,CAAcU,KAAK,cAAcC,OAAK,EAACT,UAAWhN,EAAY/D,MAAOqR,IACrEnS,EAAAC,EAAAC,cAACyR,GAAD,CAAcU,KAAK,wBAAwBC,OAAK,EAACT,UAAWU,GAAmBzR,MAAOqR,IACtFnS,EAAAC,EAAAC,cAACyR,GAAD,CAAcU,KAAK,eAAeC,OAAK,EAACT,UAAWW,GAAS1R,MAAOqR,IAEnEnS,EAAAC,EAAAC,cAAC8R,EAAA,EAAD,CAAOH,UAAWY,MCPhBC,uBAEJ,SAAAA,EAAY5R,GAAO,IAAAS,EAAA,OAAAR,OAAAS,EAAA,EAAAT,CAAAU,KAAAiR,IACjBnR,EAAAR,OAAAW,EAAA,EAAAX,CAAAU,KAAAV,OAAAY,EAAA,EAAAZ,CAAA2R,GAAA9Q,KAAAH,KAAMX,KAuBRkC,qBAAuB,SAAA2P,GACrBpR,EAAKQ,SAAS,CAAE6Q,gBAAiBD,KAzBhBpR,EA4BnBsR,aAAe,SAAA/Q,GACbP,EAAKyB,sBAAqB,GAC1BzB,EAAKT,MAAMmC,QAAQC,KAAK,UACxBJ,eAAegQ,SA5BfvR,EAAKmC,MAAQ,CACXkP,iBAAiB,EACjBG,kBAAkB,GALHxR,2LAWjB,IACyC,SAAvCuB,eAAekQ,QAAQ,YAAyBvR,KAAKuB,sBAAqB,GAAQvB,KAAKuB,sBAAqB,GAE9G,MAAMG,GACM,oBAANA,GACFC,MAAMD,GAIV1B,KAAKM,SAAS,CAAEgR,kBAAkB,uIAgBlC,IAAMZ,EAAa,CACjBS,gBAAiBnR,KAAKiC,MAAMkP,gBAC5B5P,qBAAsBvB,KAAKuB,sBAG7B,OACGvB,KAAKiC,MAAMqP,kBACZ/S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAC+S,EAAA,EAAD,CAAQC,OAAK,EAACC,kBAAgB,GAC5BnT,EAAAC,EAAAC,cAAC+S,EAAA,EAAOnI,OAAR,KACE9K,EAAAC,EAAAC,cAAC+S,EAAA,EAAOG,MAAR,KACEpT,EAAAC,EAAAC,cAACmT,EAAA,EAAD,CAAMC,GAAG,KAAItT,EAAAC,EAAAC,cAAA,OAAK6D,IAAKC,IAAMuP,IAAI,GAAGxC,MAAO,CAACf,MAAM,IAAKwD,WAAY,KAAnE,iCAEFxT,EAAAC,EAAAC,cAAC+S,EAAA,EAAOQ,OAAR,OAEFzT,EAAAC,EAAAC,cAAC+S,EAAA,EAAOS,SAAR,KACE1T,EAAAC,EAAAC,cAACyT,EAAA,EAAD,CAAKC,WAAS,GACXnS,KAAKiC,MAAMkP,gBACR5S,EAAAC,EAAAC,cAAC2T,EAAA,SAAD,KACE7T,EAAAC,EAAAC,cAAC4T,EAAA,cAAD,CAAeR,GAAG,gBAChBtT,EAAAC,EAAAC,cAAC6T,EAAA,EAAD,gBAEF/T,EAAAC,EAAAC,cAAC4T,EAAA,cAAD,CAAeR,GAAG,UAChBtT,EAAAC,EAAAC,cAAC6T,EAAA,EAAD,CAAS3N,QAAS3E,KAAKoR,cAAvB,cAGJ7S,EAAAC,EAAAC,cAAC2T,EAAA,SAAD,KACE7T,EAAAC,EAAAC,cAAC4T,EAAA,cAAD,CAAeR,GAAG,WAChBtT,EAAAC,EAAAC,cAAC6T,EAAA,EAAD,gBAEF/T,EAAAC,EAAAC,cAAC4T,EAAA,cAAD,CAAeR,GAAG,UAChBtT,EAAAC,EAAAC,cAAC6T,EAAA,EAAD,mBAOd/T,EAAAC,EAAAC,cAACgS,GAAD,CAAQC,WAAYA,YA5EV/R,cAmFHwG,eAAW8L,IClFNsB,QACW,cAA7BC,OAAOzC,SAAS0C,UAEe,UAA7BD,OAAOzC,SAAS0C,UAEhBD,OAAOzC,SAAS0C,SAASC,MACvB,2DCXNC,IAASnC,OAAOjS,EAAAC,EAAAC,cAACmU,EAAA,EAAD,CAAQC,SAAU,SAC9BtU,EAAAC,EAAAC,cAACqU,GAAD,OACSC,SAASC,eAAe,SDwH/B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.20343cc7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Home.css\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div className=\"Home\">\n        <div className=\"lander\">\n          <h1>GDoH</h1>\n          <p>A simple health care information app</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./NotFound.css\";\n\nexport default () =>\n  <div className=\"NotFound\">\n    <h3>Sorry, page not found!</h3>\n  </div>;\n","import React from \"react\";\nimport { Button, Glyphicon } from \"react-bootstrap\";\nimport \"./LoaderButton.css\";\n\nexport default ({\n  isLoading,\n  text,\n  loadingText,\n  className = \"\",\n  disabled = false,\n  ...props\n}) =>\n  <Button\n    className={`LoaderButton ${className}`}\n    disabled={disabled || isLoading}\n    {...props}\n  >\n    {isLoading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}\n    {!isLoading ? text : loadingText}\n  </Button>;\n","import React, { Component } from \"react\";\nimport { FormGroup, FormControl, ControlLabel, Image } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport logo from '../images/GPG-Logo.png';\nimport \"./Login.css\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        isLoading: false,\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  validateForm() {\n    return this.state.email.length > 0 && this.state.password.length > 0;\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    this.setState({ isLoading: true });\n    \n    try {\n      sessionStorage.setItem(\"loggedIn\", true);\n      this.props.userHasAuthenticated(true);\n      this.props.history.push(\"/maintabview\");\n    } catch (e) {\n      alert(e.message);\n      this.setState({ isLoading: false });\n    }\n  }\n  \n\n  render() {\n    return (\n      <div className=\"Login\">\n          <Image className=\"center\" src={logo} responsive />\n        <form onSubmit={this.handleSubmit}>\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            <ControlLabel>Email</ControlLabel>\n            <FormControl\n              autoFocus\n              type=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            <ControlLabel>Password</ControlLabel>\n            <FormControl\n              value={this.state.password}\n              onChange={this.handleChange}\n              type=\"password\"\n            />\n          </FormGroup>\n          <LoaderButton\n            block\n            bsSize=\"large\"\n            disabled={!this.validateForm()}\n            type=\"submit\"\n            isLoading={this.state.isLoading}\n            text=\"Login\"\n            loadingText=\"Logging in…\"\n            />\n        </form>\n      </div>\n    );\n  }\n}","\nimport React, { Component } from \"react\";\nimport { FormGroup, FormControl, ControlLabel, Image, Radio } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { withRouter } from 'react-router-dom';\nimport logo from '../images/find.png';\nimport \"./MainSearch.css\";\n\nclass MainSearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        isLoading: false,\n      hospital: \"All\",\n      system : \"HIS\",\n      patientIdchecked: true,\n      value: undefined\n    };\n  }\n\n  validateForm() {\n    return true;\n  }\n\n  getSearchType(){ \n    \n    if(this.state.patientIdchecked){\n      return \"patient\"\n    }else{\n      return \"Id\"\n    }\n  }\n\n  handleChange = event => {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      this.props.history.push({\n        pathname: '/patientsearchresults',\n        state: { \n          hospital : this.state.hospital,\n        searchtype : this.getSearchType(),\n        system : this.state.system,\n      value :  this.state.value}\n      });\n    } catch (e) {\n      alert(e.message);\n      this.setState({ isLoading: false });\n    }\n  }\n\n  onChangeList = (event) => {\n    this.setState({hospital: this.inputRef.value});\n  }\n  onChangeListSystems = (event) => {\n    this.setState({system: event.target.value});\n  }\n\n  onSearchChangeSetPatient = e => {\n    this.setState({\n      patientIdchecked: true\n     });\n    }\n  onSearchChangeSetID = e => {\n    this.setState({\n      patientIdchecked: false\n     });\n  }\n\n  RenderPharmaView = () => {\n    \n    return(\n      <div className=\"pharmacy\">\n        <FormGroup controlId=\"Id\" bsSize=\"large\">\n            <ControlLabel>Id Number</ControlLabel>\n            <FormControl\n              value={this.state.value}\n              onChange={this.handleChange.bind(this)}\n              type=\"number\"\n            />\n          </FormGroup>\n      </div>\n    );\n  }\n\n  RenderHISView = () => {\n    \n    return(\n      <div className=\"HIS\">\n        <FormGroup controlId=\"formControlsSelect2\" bsSize=\"large\">\n            <ControlLabel>Hospital</ControlLabel>\n            <FormControl componentClass=\"select\" placeholder=\"All\" inputRef={(ref) => {this.inputRef = ref}}\n                 onChange={this.onChangeList}>\n                <option value=\"All\">All</option>\n                <option value=\"Bheki Mlangeni\">Bheki Mlangeni</option>\n                <option value=\"Carletonville\">Carletonville</option>\n                <option value=\"Charlotte Maxeke\">Charlotte Maxeke</option>\n                <option value=\"Chris Hani Baragwanath\">Chris Hani Baragwanath</option>\n                <option value=\"Cullinan\">Cullinan</option>\n                <option value=\"Dr George Mukhari\">Dr George Mukhari</option>\n                <option value=\"Edenvale\">Edenvale</option>\n                <option value=\"Heidelberg\">Heidelberg</option>\n                <option value=\"Helen Joseph\">Helen Joseph</option>\n                <option value=\"Jubilee\">Jubilee</option>\n                <option value=\"Fare East Rand\">Fare East Rand</option>\n                <option value=\"Germiston\">Germiston</option>\n                <option value=\"Kalafong\">Kalafong</option>\n                <option value=\"Kopanong\">Kopanong</option>\n                <option value=\"Leratong\">Leratong</option>\n                <option value=\"Mamelodi\">Mamelodi</option>\n                <option value=\"Medunsa\">Medunsa</option>\n                <option value=\"Odi\">Odi</option>\n                <option value=\"Oral Dental\">Oral Dental</option>\n                <option value=\"Pholosong\">Pholosong</option>\n                <option value=\"Pretoria West\">Pretoria West</option>\n                <option value=\"Rahima Moosa\">Rahima Moosa</option>\n                <option value=\"Sizwe\">Sizwe</option>\n                <option value=\"South Rand\">South Rand</option>\n                <option value=\"Sterkfontein\">Sterkfontein</option>\n                <option value=\"Steve Biko\">Steve Biko</option>\n                <option value=\"Tambo\">Tambo</option>\n                <option value=\"Tara\">Tara</option>\n                <option value=\"Tembisa\">Tembisa</option>\n                <option value=\"Thelle Mogoerane\">Thelle Mogoerane</option>\n                <option value=\"Tshwane\">Tshwane</option>\n                <option value=\"Tshwane Rehab\">Tshwane Rehab</option>\n                <option value=\"Weskoppies\">Weskoppies</option>\n                <option value=\"Wits Oral\">Wits Oral</option>\n                <option value=\"Yusuf Dadoo\">Yusuf Dadoo</option>\n   \n            </FormControl>\n            </FormGroup>\n            <FormGroup>\n            <Radio name=\"radioGroup\" inline \n            defaultChecked\n            onClick={this.onSearchChangeSetPatient.bind(this)}>\n              Patient Identifier\n            </Radio>{' '}\n            <Radio name=\"radioGroup\" inline onClick={this.onSearchChangeSetID.bind(this)}>\n              Identity Number\n            </Radio>{' '}\n          </FormGroup>\n        {this.state.patientIdchecked ? <FormGroup controlId=\"patientId\" bsSize=\"large\">\n            <ControlLabel>Patient ID</ControlLabel>\n            <FormControl\n              autoFocus\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.handleChange.bind(this)}\n            />\n          </FormGroup> : <FormGroup controlId=\"Id\" bsSize=\"large\">\n            <ControlLabel>Id Number</ControlLabel>\n            <FormControl\n              value={this.state.value}\n              onChange={this.handleChange.bind(this)}\n              type=\"number\"\n            />\n          </FormGroup>}\n      </div>\n    );\n  }\n\n  RenderSANBS_DemographicsView = () => {\n    \n    return(\n      <div className=\"HIS\">\n        <FormGroup controlId=\"formControlsSelect2\" bsSize=\"large\">\n            <ControlLabel>Hospital Code</ControlLabel>\n            <FormControl componentClass=\"select\" placeholder=\"select\" inputRef={(ref) => {this.inputRef = ref}}\n                 onChange={this.onChangeList}>\n                <option value=\"\">--select--</option>\n                <option value=\"0540292\">Bheki Mlangeni (0540292)</option>\n                <option value=\"5603021\">Carletonville (5603021)</option>\n                <option value=\"5601398\">Charlotte Maxeke (5601398)</option>\n                <option value=\"5601177\">Chris Hani Baragwanath (5601177)</option>\n                <option value=\"5603323\">Cullinan (5603323)</option>\n                <option value=\"5602408\">Dr George Mukhari (5602408)</option>\n                <option value=\"5601290\">Edenvale (5601290)</option>\n                <option value=\"5601274\">Heidelberg (5601274)</option>\n                <option value=\"5601649\">Helen Joseph (5601649)</option>\n                <option value=\"5604095\">Jubilee (5604095)</option>\n                <option value=\"5601339\">Fare East Rand (5601339)</option>\n                <option value=\"5601363\">Germiston (5601363)</option>\n                <option value=\"5602653\">Kalafong (5602653)</option>\n                <option value=\"5601711\">Kopanong (5601711)</option>\n                <option value=\"5603285\">Leratong (5603285)</option>\n                <option value=\"5604079\">Mamelodi (5604079)</option>\n                <option value=\"0157643\">Medunsa (0157643)</option>\n                <option value=\"5605032\">Odi (5605032)</option>\n                <option value=\"0157651\">Oral Dental (0157651)</option>\n                <option value=\"5605199\">Pholosong (5605199)</option>\n                <option value=\"5603145\">Pretoria West (5603145)</option>\n                <option value=\"5601258\">Rahima Moosa (5601258)</option>\n                <option value=\"5602610\">Sizwe (5602610)</option>\n                <option value=\"5601622\">South Rand (5601622)</option>\n                <option value=\"5602955\">Sterkfontein (5602955)</option>\n                <option value=\"5601738\">Steve Biko (5601738)</option>\n                <option value=\"5601215\">Tambo (5601215)</option>\n                <option value=\"5601665\">Tara (5601665)</option>\n                <option value=\"5602793\">Tembisa (5602793)</option>\n                <option value=\"0208957\">Tshwane (0208957)</option>\n                <option value=\"0454842\">Tshwane Rehab (0454842)</option>\n                <option value=\"5602882\">Weskoppies (5602882)</option>\n                <option value=\"0157678\">Wits Oral (0157678)</option>\n                <option value=\"5601460\">Yusuf Dadoo (5601460)</option>\n   \n            </FormControl>\n            </FormGroup>\n            <FormGroup controlId=\"patientId\" bsSize=\"large\">\n            <ControlLabel>Patient ID</ControlLabel>\n            <FormControl\n              autoFocus\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.handleChange.bind(this)}\n            />\n          </FormGroup>\n      </div>\n    );\n  }\n\n  renderNotAvaiable = () =>{\n    return (\n        <div className=\"notAvailable\">\n          <h2>View currently not available</h2>\n          </div>\n    );\n  }\n\n  renderInitView = () => {\n    if(this.state.system === 'HIS'){\n      return this.RenderHISView();\n    }else if(this.state.system === 'Pharmacy'){\n      return this.RenderPharmaView();\n    }else if (this.state.system === 'SANBS') {\n      return this.RenderSANBS_DemographicsView();\n    }else{\n      this.renderNotAvaiable();\n    }\n  }\n  \n\n  render() {\n    const display = this.renderInitView();\n    return (\n      <div className=\"MainSearch\">\n          <Image className=\"center\" src={logo} responsive />\n        <form onSubmit={this.handleSubmit}>\n        <FormGroup controlId=\"formControlsSelect1\" bsSize=\"large\">\n            <ControlLabel>Systems</ControlLabel>\n            <FormControl componentClass=\"select\" placeholder=\"HIS\" sysRef={(ref) => {this.sysRef = ref}}\n                 onChange={this.onChangeListSystems}>\n                <option value=\"HIS\">HIS</option>\n                <option value=\"Pharmacy\">Pharmacy</option>\n                <option value=\"HPRS\">HPRS</option>\n                <option value=\"SANBS\">SANBS</option>\n                <option value=\"NHLS\">NHLS</option>\n                <option value=\"PACS\">PACS</option>\n                <option value=\"Mental Health\">Mental Health</option>\n            </FormControl>\n            </FormGroup>\n            {display}\n          <LoaderButton\n            block\n            bsSize=\"large\"\n            disabled={!this.validateForm()}\n            type=\"submit\"\n            isLoading={this.state.isLoading}\n            text=\"find\"\n            loadingText=\"searching…\"\n            />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(MainSearch);","import React, { Component } from 'react'\n\nexport default class PersonalDetailsTab extends Component {\n\n\n    defaultValue = () => {\n        return(\n            <div className=\"default center\">\n                        No data to display\n            </div>\n        );\n    }\n\n    getValues = () => {\n        return(\n                <div className=\"persondetails\">\n                            <dl className=\"dl-horizontal\">\n                                <dt>Title</dt>\n                                <dd>{this.props.details.Title}</dd>\n\n                                <dt>FirstName</dt>\n                                <dd>{this.props.details.FirstName}</dd>\n\n                                <dt>LastName</dt>\n                                <dd>{this.props.details.LastName}</dd>\n\n                                <dt>MiddleName</dt>\n                                <dd>{this.props.details.MiddleName}</dd>\n                                \n\n                                <dt>RSA ID Number</dt>\n                                <dd>{this.props.details.ID}</dd>\n\n                                <dt>BirthDate</dt>\n                                <dd>{this.props.details.BirthDate}</dd>\n\n                                <dt>BloodType</dt>\n                                <dd>{this.props.details.BloodType}</dd>\n\n                                <dt>Age</dt>\n                                <dd>{this.props.details.Age}</dd>\n\n                                <dt>DeathDate</dt>\n                                <dd>{this.props.details.DeathDate}</dd>\n\n                                <dt>Race</dt>\n                                <dd>{this.props.details.Race}</dd>\n\n                                <dt>Gender</dt>\n                                <dd>{this.props.details.Gender}</dd>\n\n                                <dt>Religion</dt>\n                                <dd>{this.props.details.Religion}</dd>\n\n                                <dt>Language</dt>\n                                <dd>{this.props.details.Language}</dd>\n\n                                <dt>MaritalStatus</dt>\n                                <dd>{this.props.details.MaritalStatus}</dd>\n\n                                <dt>Nationality</dt>\n                                <dd>{this.props.details.Nationality}</dd>\n                                \n                            </dl>\n                        </div>\n                        );\n    }\n\n    render(){\n        const display = this.props.details === \"\" ? this.defaultValue() : this.getValues();\n        return(\n            <div>{display }</div>\n        );\n    }\n}","import React, { Component } from 'react'\nimport {PanelGroup, Panel} from 'react-bootstrap';\n\n\nexport default class ContactDetailsTab extends Component{\n\n\n\n    getResidentialAddress = (basedetails,type) => {\n        if(basedetails === undefined){\n            return null\n        }else if (type==='patient'){\n            return (\n\n                <div className=\"addrdiv\">\n                    <address>\n                        {basedetails.ResidentialAddress.Line1 === \"\" || basedetails.ResidentialAddress.Line1 === undefined ? null   : basedetails.ResidentialAddress.Line1} {basedetails.ResidentialAddress.Line1 === \"\" || basedetails.ResidentialAddress.Line1 === undefined ? null : <br/>}\n                        {basedetails.ResidentialAddress.Line2 === \"\" || basedetails.ResidentialAddress.Line2 === undefined ? null : basedetails.ResidentialAddress.Line2} {basedetails.ResidentialAddress.Line2 === \"\" || basedetails.ResidentialAddress.Line2 === undefined ? null : <br/>}\n                        {basedetails.ResidentialAddress.line3 === \"\" || basedetails.ResidentialAddress.Line3 === undefined ? null : basedetails.ResidentialAddress.line3} {basedetails.ResidentialAddress.Line3 === \"\" || basedetails.ResidentialAddress.Line3 === undefined ? null : <br/>}\n                        {basedetails.ResidentialAddress.Line4 === \"\" || basedetails.ResidentialAddress.Line4 === undefined ? null : basedetails.ResidentialAddress.Line4} {basedetails.ResidentialAddress.Line4 === \"\" || basedetails.ResidentialAddress.Line4 === undefined ? null : <br/>}\n                        {basedetails.ResidentialAddress.PostalCode === \"\" || basedetails.ResidentialAddress.PostalCode === undefined ? null : basedetails.ResidentialAddress.PostalCode}\n                    </address>\n                </div>\n            );\n        }else{\n            return (\n                <div className=\"addrdiv\">\n                    <dl className=\"dl-horizontal\">\n                                {basedetails.NextOfKin.FirstName === \"\" ? null : <div>\n                                <dt>Name:</dt>\n                                <dd>{basedetails.NextOfKin.FirstName}</dd>\n                                    </div>}\n\n                                    {basedetails.NextOfKin.Relationship === \"\" ? null : <div>\n                                <dt>Relationship:</dt>\n                                <dd>{basedetails.NextOfKin.Relationship}</dd>\n                                    </div>}\n\n                                    {basedetails.NextOfKin.ContactDetails.TelephoneNumber === \"\" ? null : <div>\n                                <dt>Telephone:</dt>\n                                <dd>{basedetails.NextOfKin.ContactDetails.TelephoneNumber}</dd>\n                                    </div>}\n                    </dl>\n\n                    <Panel>\n                        <Panel.Heading>\n                        <Panel.Title componentClass=\"h3\">Residential Address</Panel.Title>\n                        </Panel.Heading>\n                        <Panel.Body>\n                                <address>\n                                {basedetails.NextOfKin.ContactDetails.ResidentialAddress.Line1 === \"\" || basedetails.NextOfKin.ContactDetails.ResidentialAddress.Line1 === undefined ? null :  basedetails.NextOfKin.ContactDetails.ResidentialAddress.Line1} {basedetails.NextOfKin.ContactDetails.ResidentialAddress.Line1 === \"\" || basedetails.NextOfKin.ContactDetails.ResidentialAddress.Line1 === undefined ? null : <br/>}\n                                {basedetails.NextOfKin.ContactDetails.ResidentialAddress.Line2 === \"\" || basedetails.NextOfKin.ContactDetails.ResidentialAddress.Line2 === undefined? null :  basedetails.NextOfKin.ContactDetails.ResidentialAddress.Line2} {basedetails.NextOfKin.ContactDetails.ResidentialAddress.Line2 === \"\" || basedetails.NextOfKin.ContactDetails.ResidentialAddress.Line2 === undefined ? null : <br/>}\n                                {basedetails.NextOfKin.ContactDetails.ResidentialAddress.Line3 === \"\" || basedetails.NextOfKin.ContactDetails.ResidentialAddress.Line3 === undefined ? null :  basedetails.NextOfKin.ContactDetails.ResidentialAddress.Line3} {basedetails.NextOfKin.ContactDetails.ResidentialAddress.Line3 === \"\" || basedetails.NextOfKin.ContactDetails.ResidentialAddress.Line3 === undefined ? null : <br/>}\n                                {basedetails.NextOfKin.ContactDetails.ResidentialAddress.Line4 === \"\" || basedetails.NextOfKin.ContactDetails.ResidentialAddress.Line4 === undefined ? null :  basedetails.NextOfKin.ContactDetails.ResidentialAddress.Line4} {basedetails.NextOfKin.ContactDetails.ResidentialAddress.Line4 === \"\" || basedetails.NextOfKin.ContactDetails.ResidentialAddress.Line4 === undefined ? null : <br/>}\n                                {basedetails.NextOfKin.ContactDetails.ResidentialAddress.PostalCode === \"\" || basedetails.NextOfKin.ContactDetails.ResidentialAddress.PostalCode === undefined ? null :  basedetails.NextOfKin.ContactDetails.ResidentialAddress.PostalCode}\n                                </address>\n                        </Panel.Body>\n                    </Panel>\n                    \n\n                </div>\n\n                \n            );\n        }\n\n    }\n\n    getPatientNextOfKinName = () => {\n\n    }\n\n    render(){\n        console.log('testing the structure', this.props.details)\n        const addr = this.getResidentialAddress(this.props.details, 'patient');\n        const NKaddr = this.getResidentialAddress(this.props.details, 'nok');\n        return(\n         <div className=\"contactdetails\">\n             {this.props.details === undefined ? <div>No Data to display</div> : <PanelGroup accordion id=\"accordion\">\n                <Panel eventKey=\"1\">\n                    <Panel.Heading>\n                    <Panel.Title toggle>Residential Address</Panel.Title>\n                    </Panel.Heading>\n                    <Panel.Body collapsible>\n                                        {addr}    \n                    </Panel.Body>\n                </Panel>\n                <Panel eventKey=\"2\">\n                    <Panel.Heading>\n                    <Panel.Title toggle>Next of Kin</Panel.Title>\n                    </Panel.Heading>\n                    <Panel.Body collapsible>\n                        {NKaddr}\n                    </Panel.Body>\n                </Panel>\n                </PanelGroup>}\n         </div>\n        );\n    }\n}","import React, { Component } from 'react'\nimport { ButtonToolbar, Button, Modal } from 'react-bootstrap'\nimport PersonalDetailsTab from '../containers/PersonalDetailsTab'\nimport ContactDetailsTab from '../containers/ContactDetailsTab'\nimport './PersonalDetailsTabTable.css'\nimport BootstrapTable from 'react-bootstrap-table-next';\n\n\nexport default class PersonalDetailsTabTable extends Component {\n\n    constructor(props){\n        super(props);\n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.state = {\n            data : [], \n            show : false, \n            display : undefined,\n            selected : ''\n        }\n    }\n\n    handleClose() {\n        this.setState({ show: false });\n      }\n    \n      handleShow() {\n        this.setState({ show: true });\n      }\n\n    componentWillReceiveProps(nextProps){ \n        /*if(nextProps.details.Prescriptions !== undefined){\n            var templist = [];\n            templist = nextProps.details.Prescriptions[0].PrescriptionDetail;\n            this.setState({data : templist});\n        }else{\n            this.setState({data : []})\n        }*/\n    }\n\n    componentDidMount = async () => {\n        /*if(this.props.details.Prescriptions !== undefined){\n            var templist = [];\n            templist = this.props.details.Prescriptions[0].PrescriptionDetail;\n            this.setState({data : templist});\n        }*/\n        this.setState({data : this.props.details})\n    }\n\n    render(){\n        const columns = [ {\n            dataField: 'FirstName',\n            text: 'FirstName'\n          }, {\n            dataField: 'LastName',\n            text: 'LastName',\n            sort: true\n\n          },\n          {\n            dataField: 'ID',\n            text: 'RSA ID Number'\n          }, {\n            dataField: 'hospital',\n            text: 'Hospital',\n            sort: true\n          }\n          ];\n          const selectRow = {\n            mode: 'radio',\n            clickToSelect: true,\n            clickToExpand: true\n          };\n\n          const expandRow = {\n            showExpandColumn: true,\n            renderer: row => (\n              <div className='center'>\n                    <ButtonToolbar>\n                        <Button onClick={ () => {\n\n                            this.setState({selected : row, show : true, display : 'personal'});\n\n                        }} bsStyle=\"info\">Personal Details</Button>\n                        <Button onClick={ () => {\n\n                        this.setState({selected : row, show : true, display : 'address'});\n\n                        }} bsStyle=\"info\">Patient Address</Button> \n                    </ButtonToolbar>\n              </div>\n            )\n          };\n\n          const cur = this.state.display === 'personal'? <PersonalDetailsTab details={this.state.selected}/> : <ContactDetailsTab details={this.state.selected.ContactDetails}/>;\n\n        return (\n         <div className=\"phamDiv center\">\n             <Modal className=\"center\" show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Details</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            \n            {cur}\n            \n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={this.handleClose}>Close</Button>\n          </Modal.Footer>\n        </Modal>\n        <BootstrapTable \n                    striped\n                    hover\n                    keyField='hospital' \n                    data={ this.state.data } \n                    columns={ columns }\n                    selectRow={ selectRow }\n                    expandRow={ expandRow }/>\n         </div>\n                \n        );\n    }\n}","import React, { Component } from 'react'\nimport BootstrapTable from 'react-bootstrap-table-next';\n\n\nexport default class PharmacyInfoTab extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            data : []\n        }\n    }\n\n    componentWillReceiveProps(nextProps){ \n        if(nextProps.details.Prescriptions !== undefined){\n            var templist = [];\n            templist = nextProps.details.Prescriptions[0].PrescriptionDetail;\n            this.setState({data : templist});\n        }else{\n            this.setState({data : []})\n        }\n    }\n\n    componentDidMount = async () => {\n        if(this.props.details.Prescriptions !== undefined){\n            var templist = [];\n            templist = this.props.details.Prescriptions[0].PrescriptionDetail;\n            this.setState({data : templist});\n        }\n    }\n\n    render(){\n        const columns = [{\n            dataField: 'DateOfBirth',\n            text: 'DateOfBirth'\n          }, {\n            dataField: 'Age',\n            text: 'Age'\n          }, {\n            dataField: 'Gender',\n            text: 'Gender',\n            sort: true\n\n          },{\n            dataField: 'PatientFullNames',\n            text: 'PatientFullNames'\n          },\n          {\n            dataField: 'Language',\n            text: 'Language'\n          }, {\n            dataField: 'PersonRace',\n            text: 'PersonRace'\n          }, {\n            dataField: 'PrescriptionNumber',\n            text: 'PrescriptionNumber',\n\n            \n          },{\n            dataField: 'PrescriberName',\n            text: 'PrescriberName'\n          }, {\n            dataField: 'DispenserName',\n            text: 'DispenserName'\n          }, {\n            dataField: 'Medication',\n            text: 'Medication',\n            \n            \n          },{\n            dataField: 'PackSizeValue',\n            text: 'PackSizeValue'\n          }, {\n            dataField: 'MedicationCost',\n            text: 'MedicationCost'\n          }, {\n            dataField: 'PrescriptionDate',\n            text: 'PrescriptionDate',\n            \n          },{\n            dataField: 'ClinicName',\n            text: 'ClinicName',\n          },\n           {\n            dataField: 'RepeatDate',\n            text: 'RepeatDate',\n            \n          }, {\n            dataField: 'Repeats',\n            text: 'Repeats',\n            \n          }, {\n            dataField: 'DemanderName',\n            text: 'DemanderName',\n            \n          }, {\n            dataField: 'FrmAdministration',\n            text: 'FrmAdministration',\n            \n          }, {\n            dataField: 'Hospital',\n            text: 'Hospital',\n            \n          }\n          ];\n        return (\n\n                <BootstrapTable \n                    striped\n                    hover\n                    keyField='PrescriptionNumber' \n                    data={ this.state.data } \n                    columns={ columns }/>\n        );\n    }\n}","import React, { Component } from 'react'\nimport { Tab, Tabs } from 'react-bootstrap';\nimport PersonalDetailsTabTable from '../components/PersonalDetailsTabTable'\nimport PharmacyInfoTab from '../containers/PharmacyInfoTab';\n \n\nexport default class PharmacyPatientTabView extends Component {\n    render(){\n        console.log(this.props)\n        return(\n            <Tabs defaultActiveKey={1} id=\"maintabview\">\n                <Tab eventKey={1}  title=\"Prescriptions\">\n                    <PharmacyInfoTab details={this.props.selected}/>\n                </Tab>\n                <Tab eventKey={2}  title=\"Person Details\">\n                    <PersonalDetailsTabTable details={this.props.demographics}/>\n                </Tab>\n            </Tabs>\n        );\n    }\n}","import React, { Component } from 'react';\nimport {PanelGroup, Panel} from 'react-bootstrap';\n\nexport default class healthInfoTab extends Component {\n    render(){\n        return(\n         <div className=\"healthdiv\">\n                <PanelGroup accordion id=\"accordion\">\n                <Panel eventKey=\"1\">\n                        <Panel.Heading>\n                        <Panel.Title toggle>Hospital Info</Panel.Title>\n                        </Panel.Heading>\n                        <Panel.Body collapsible>\n                                    <div>\n                                            <dl className=\"dl-horizontal\">\n\n                                            <dt>Hospital :</dt>\n                                            <dd>{this.props.details.hospital}</dd>\n                                                <dt>Last Visit Date :</dt>\n                                            <dd>{this.props.details.LastVisitDate}</dd>\n\n                                            <dt>Last Visit Class :</dt>\n                                            <dd>{this.props.details.LastVisitClassification}</dd>\n\n                                            \n                                            </dl>\n                                    </div>           \n                        </Panel.Body>\n                    </Panel>\n                    <Panel eventKey=\"2\">\n                        <Panel.Heading>\n                        <Panel.Title toggle>Allergies</Panel.Title>\n                        </Panel.Heading>\n                        <Panel.Body collapsible>\n                                    <div>\n                                        {this.props.details.Allergies}\n                                    </div>           \n                        </Panel.Body>\n                    </Panel>\n                    </PanelGroup>\n         </div>\n            \n        );\n    }\n}\n\n\n","import React, { Component } from 'react'\nimport ContactDetailsTab from '../containers/ContactDetailsTab'\nimport PersonalDetailsTab from '../containers/PersonalDetailsTab'\nimport HealthInfoTab from '../containers/HealthInfoTab'\nimport { Tab, Tabs } from 'react-bootstrap';\n \n\nexport default class PatientTabView extends Component {\n    render(){\n        return(\n            <Tabs defaultActiveKey={1} id=\"maintabview\">\n                <Tab eventKey={1} title=\"Personal Details\">\n                    <PersonalDetailsTab details={this.props.selected}/>\n                </Tab>\n                <Tab eventKey={2} title=\"Contact Details\">\n                    <ContactDetailsTab  details={this.props.selected.ContactDetails}/>\n                </Tab>\n                <Tab eventKey={3} title=\"Health Info\">\n                    <HealthInfoTab details = {this.props.selected} />\n                </Tab>\n\n            </Tabs>\n        );\n    }\n}","import React, { Component } from 'react'\nimport {Grid, Col, Row} from 'react-bootstrap'\nimport Loader from 'react-loader-spinner'\nimport './PatientSearchResultsTable.css'\nimport PharmacyPatientTab from '../components/PharmacyPatientTabView'\n//import paginationFactory from 'react-bootstrap-table2-paginator';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport PatientTabView from '../components/PatientTabView';\nimport Switch from \"react-switch\";\n\nexport default class PatientSearchResultsTable extends Component{\n\n  constructor(){\n    super();\n    this.state = {\n      data : [],\n      adata : [],\n      ndata : [],\n      demodata : [],\n      isLoading : false,\n      isSelected : \"\",\n      isHospTab : false,\n      sortType : 'hospital',\n      checked: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n\n\n  queryForHIS  = async (value, hospital, searchtype) => {\n    var url = '';\n\n    if(this.props.datalist.system === 'SANBS'){\n      url = `http://10.32.60.74:7004/PatientProfileSANBSRS/hospitalcodeIdentifier?Identifier=${value}&HospitalCode=${hospital}`\n    }else{\n      if(hospital===\"All\"){\n        if(searchtype==='patient'){\n          \n          url = `http://10.32.60.74:7004/gdoh-patient-profile-service/PSQueryByIdentifierOnlyRS/patientidentifier?Identifier=${value}`\n        }else{\n          \n          url = `http://10.32.60.74:7004/gdoh-patient-profile-service/PSQueryByIDNumberOnlyRS/patientidentifier?ID=${value}`\n        }\n         \n      }else if(searchtype === 'patient'){\n        \n        url = `http://10.32.60.74:7004/gdoh-patient-profile-service/PatientIdentifierRS/patientidentifier?Identifier=${value}&Hospital=${hospital}`\n      }else{\n        \n        url = `http://10.32.60.74:7004/gdoh-patient-profile-service/PatientIdRS/patientidhospital?ID=${value}&Hospital=${hospital}`\n        \n      }\n    }\n   \n\n    try{\n      var req = await fetch(url,\n        {\n          mode : 'cors',\n          method : 'GET',\n          headers : {\n            'accept': 'application/json',\n            'Content-Type' : 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Connection': 'Keep-Alive'\n          }\n        });\n    var response = await req.json();\n      if(req.status === 200){\n        if(response.PatientProfile != null){\n          \n          const person = response.PatientProfile.map(cur => {\n            return (\n              {id : cur.Identifier[\"$\"],\n              ID : cur.ID[\"$\"],\n              Title : cur.Title,\n                FirstName : cur.FirstName,\n                LastName : cur.LastName,\n                MiddleName : cur.MiddleName,\n                Gender : cur.Gender,\n                BirthDate : cur.BirthDate,\n                BloodType : cur.BloodType, \n                Age : cur.Age,\n                Race : cur.Race, \n                MaritalStatus : cur.MaritalStatus,\n                Language : cur.Language,\n                Religion : cur.Religion,\n                Nationality : cur.Nationality,\n                Allergies : cur.Allergies,\n                hospital : cur[\"@hospital\"],\n                LastVisitDate : cur.LastVisitDate,\n                LastVisitClassification : cur.LastVisitClassification,\n                ContactDetails : {\n                  ResidentialAddress: {\n                    Line1: cur.ContactDetails.ResidentialAddress.Line1,\n                    Line2: cur.ContactDetails.ResidentialAddress.Line2,\n                    line3: cur.ContactDetails.ResidentialAddress.Line3,\n                    Line4: cur.ContactDetails.ResidentialAddress.Line4,\n                    PostalCode: cur.ContactDetails.ResidentialAddress.PostalCode\n                  },\n                  NextOfKin : cur.NextOfKin\n                },\n                HealthInfo : {\n                  Allergies: cur.Allergies\n                }\n              }\n            );\n          });\n          this.props.datalist.system === 'Pharmacy' ? this.setState({demodata : person, isLoading : false}) : this.setState({data : person, isLoading : false});\n        }else{\n          this.setState({isLoading : false});\n        }\n    \n        }else{\n          this.setState({isLoading: false })\n        }\n          }catch(err){\n            this.setState({isLoading: false })\n          }\n  }\n\n  showBasedOnToggle = () => {\n    this.state.checked ? this.setState({data : this.state.adata.concat(this.state.ndata)}) : this.setState({data : this.state.adata})\n  }\n\n  queryForPharmacy = async(value) => {\n    this.setState({isLoading : true});\n   var url = `http://10.32.60.74:7004/ViewPharmacyPatientDetailsProvABCSImpl/RXRestService/RX?ID=${value}`\n   try{\n    var req = await fetch(url,\n      {\n        mode : 'cors',\n        method : 'GET',\n        headers : {\n          'accept': 'application/json',\n          'Content-Type' : 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Connection': 'Keep-Alive'\n        }\n      });\n  var response = await req.json();\n  var avListTemp = [],noListTemp = [];\n  if(req.status === 200){\n    if(response.PatientProfile != null){\n      response.PatientProfile.map(cur => {\n        if(cur['@Pharmacy'] !== undefined){\n           return cur['@ResponseStatus'] === 'success' ? avListTemp.push(cur) : noListTemp.push(cur);\n        }else{\n          return null\n        }\n        \n      });\n      const avList = avListTemp.map(x => {\n        return (\n          {\n            ID : x.Prescriptions[0].PrescriptionDetail[0].PersonIDNumber,\n            Pharmacy : x['@Pharmacy'],\n            Prescriptions : x.Prescriptions\n          }\n        );\n      })\n      const noList = noListTemp.map(x => {\n        return (\n          {\n            Pharmacy : x['@Pharmacy'],\n            response : x['@ResponseStatus']\n          }\n        );\n      })\n      \n      this.setState({data : avList, adata : avList, ndata : noList, isLoading : false});\n    }else{\n      this.setState({isLoading : false});\n    }\n\n    }else{\n      this.setState({isLoading: false })\n    }\n   }catch(err){\n    this.setState({isLoading: false })\n   }\n  }\n\n  async componentDidMount() {\n    this.setState({isLoading: true});\n    var searchtype, value, hospital,system;\n    searchtype = this.props.datalist.searchtype;\n    value = this.props.datalist.value;\n    hospital = this.props.datalist.hospital;\n    system = this.props.datalist.system;\n    \n    if(system === 'HIS' || system === 'SANBS'){\n      this.queryForHIS(value, hospital, searchtype)\n    }else if(system === 'Pharmacy'){\n      this.queryForPharmacy(value)\n      this.queryForHIS(value, hospital,'ID');\n    }else{\n\n    }\n          \n        \n    \n  }\n\n  checkData = () => {\n   return (\n      <div><h3>No data found</h3></div> \n    ) \n  }\n\n  getColValues = () => {\n    const system = this.props.datalist.system;\n    if(system === 'HIS' || system === 'SANBS'){\n      return [{\n        dataField: 'id',\n        text: 'Patient ID'\n      }, {\n        dataField: 'ID',\n        text: 'ID'\n      }, {\n        dataField: 'hospital',\n        text: 'Hospital',\n        sort: true\n      }\n      ];\n    }else if(system === 'Pharmacy'){\n      return [ {\n        dataField: 'Pharmacy',\n        text: 'Pharmacy',\n        sort: true\n      }\n      ];\n    }else{\n      return null;\n    }\n  }\n\n  getColValues2 = () => {\n        return [{\n          dataField: 'id',\n          text: 'Patient ID'\n        }, {\n          dataField: 'ID',\n          text: 'ID'\n        }, {\n          dataField: 'hospital',\n          text: 'Hospital',\n          sort: true\n        }\n        ];\n  }\n\n  getSwitch = (value) => {\n    if(value === 'Pharmacy'){\n      return (\n        <label>\n        <span> <strong>Show All</strong> </span>\n        <Switch onChange={this.handleChange} checked={this.state.checked} />\n      </label>\n      );\n    }else\n    return null;\n  }\n\n  handleChange(checked) {\n    this.setState({ checked });\n    this.showBasedOnToggle();\n  }\n\n  renderViewForHIS = (columns,selectRow) => {\nreturn (\n  this.state.isLoading ? <Loader \n         type=\"Bars\"\n         color=\"#00BFFF\"\n         height=\"200\" \n         width=\"200\"\n         className=\"center\"\n      />   : <Grid>\n      <Row className=\"show-grid\">\n        <Col md={6} mdPush={6}>\n        <div >\n          <span/>\n          <PatientTabView selected={this.state.isSelected}/>\n            </div>\n        </Col>\n        <Col md={6} mdPull={6}>\n          <BootstrapTable \n                    striped\n                    hover\n                    selectRow={ selectRow }\n                    keyField= 'hospital' \n                    data={ this.state.data } \n                    columns={ columns }/>  \n        </Col>\n    </Row>\n</Grid>\n);\n  }\n\n  onclickHospital = (e) => {\n    this.setState({isHospTab : true});\n  }\n\n  renderViewForPharmacy = (columns,displaySwitch,selectRow) => {\nreturn (\n  this.state.isLoading ? <Loader \n         type=\"Bars\"\n         color=\"#00BFFF\"\n         height=\"200\" \n         width=\"200\"\n         className=\"center\"\n      />   : <Grid>\n      <Row className=\"show-grid\">\n        <Col md={6} mdPush={6}>\n        <div >\n          <span/>\n              <PharmacyPatientTab selected={this.state.isSelected} demographics = {this.state.demodata} />\n            </div>\n        </Col>\n        <Col md={6} mdPull={6}>\n\n        {displaySwitch}\n            <BootstrapTable \n                      striped\n                      hover\n                      selectRow={ selectRow }\n                      keyField= 'Pharmacy'\n                      data={ this.state.data } \n                      columns={ columns }/> \n\n         \n        </Col>\n    </Row>\n</Grid>\n);\n  }\n\n  render(){\n    const columns = this.getColValues();\n    \n    const displaySwitch = this.getSwitch(this.props.datalist.system);\n    const selectRow = {\n      mode: 'radio',\n      clickToSelect : true,\n      style: { backgroundColor: '#c8e6c9' },\n      onSelect: (row, isSelect, rowIndex, e) => {\n        this.setState({isSelected : row});\n      },\n      hideSelectColumn : false\n    };\n\n    const re = this.props.datalist.system === 'HIS' || this.props.datalist.system === 'SANBS' ? this.renderViewForHIS(columns,selectRow) : this.renderViewForPharmacy(columns, displaySwitch,selectRow)\n\n    return(\n      <div className=\"maindiv\">\n        \n        {re}\n      </div>\n      \n    );\n  }\n\n\n}\n  ","import React, { Component } from 'react'\nimport logo from '../images/find.png'\nimport { Image } from 'react-bootstrap'\nimport './PatientSearchResults.css';\nimport PatientTable from '../components/PatientSearchResultsTable'\n\nexport default class PatientSearchResults extends Component{\n\n    render(){\n        return (\n            <div className=\"patients\">\n                <Image className=\"imagesize center\" src={logo} responsive />\n                <h2>Search Results</h2>\n                <PatientTable datalist={this.props.location.state}/>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react'\nimport { Tab, Tabs } from 'react-bootstrap';\nimport MainSearch from '../containers/MainSearch';\n \n\nexport default class TabView extends Component {\n    render(){\n        return(\n            <Tabs defaultActiveKey={1} id=\"maintabview\">\n                <Tab eventKey={1} title=\"Phase 1\">\n                    <MainSearch/>\n                </Tab>\n                <Tab eventKey={2} title=\"Phase 2\" disabled>\n                    Phase 2\n                </Tab>\n                <Tab eventKey={3} title=\"Phase 3\" disabled>\n                    Phase 3\n                </Tab>\n            </Tabs>\n        );\n    }\n}","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nexport default ({ component: C, props: cProps, ...rest }) =>\n  <Route {...rest} render={props => <C {...props} {...cProps} />} />;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./containers/Home\";\nimport NotFound from \"./containers/NotFound\";\nimport Login from \"./containers/Login\";\nimport MainSearch from \"./containers/MainSearch\";\nimport MainSearchResults from \"./containers/PatientSearchResults\";\nimport MainTab from \"./components/TabView\";\nimport AppliedRoute from \"./components/AppliedRoute\";\n\nexport default ({ childProps }) =>\n  <Switch>\n    <AppliedRoute path=\"/\" exact component={Home} props={childProps} />\n    <AppliedRoute path=\"/login\" exact component={Login} props={childProps} />\n    <AppliedRoute path=\"/mainsearch\" exact component={MainSearch} props={childProps} />\n    <AppliedRoute path=\"/patientsearchresults\" exact component={MainSearchResults} props={childProps} />\n    <AppliedRoute path=\"/maintabview\" exact component={MainTab} props={childProps} />\n    { /* Finally, catch all unmatched routes */ }\n    <Route component={NotFound} />\n  </Switch>;\n\n","\nimport React, { Component, Fragment } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport Routes from \"./Routes\";\nimport logo from './images/GPG-Logo.png';\nimport \"./App.css\";\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n  \n    this.state = {\n      isAuthenticated: false,\n      isAuthenticating: true\n    };\n    \n  }\n\n  async componentDidMount() {\n    try {\n      sessionStorage.getItem(\"loggedIn\") === 'true' ? this.userHasAuthenticated(true) : this.userHasAuthenticated(false);\n    }\n    catch(e) {\n      if (e !== 'No current user') {\n        alert(e);\n      }\n    }\n  \n    this.setState({ isAuthenticating: false });\n  }\n  \n  \n  userHasAuthenticated = authenticated => {\n    this.setState({ isAuthenticated: authenticated });\n  }\n  \n  handleLogout = event => {\n    this.userHasAuthenticated(false);\n    this.props.history.push(\"/login\");\n    sessionStorage.clear();\n  }\n  \n\n  render() {\n    const childProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      userHasAuthenticated: this.userHasAuthenticated\n    };\n  \n    return (\n      !this.state.isAuthenticating &&\n      <div className=\"App container\">\n        <Navbar fluid collapseOnSelect>\n          <Navbar.Header>\n            <Navbar.Brand>\n              <Link to=\"/\"><img src={logo} alt=\"\" style={{width:100, marginTop: -7}} />Gauteng Department of Health</Link>\n            </Navbar.Brand>\n            <Navbar.Toggle />\n          </Navbar.Header>\n          <Navbar.Collapse>\n            <Nav pullRight>\n              {this.state.isAuthenticated\n                ? <Fragment>\n                    <LinkContainer to=\"/maintabview\">\n                      <NavItem>Search</NavItem>\n                    </LinkContainer>\n                    <LinkContainer to=\"/login\">\n                      <NavItem onClick={this.handleLogout}>Sign Out</NavItem>\n                    </LinkContainer>\n                  </Fragment>\n                : <Fragment>\n                    <LinkContainer to=\"/signup\">\n                      <NavItem>Signup</NavItem>\n                    </LinkContainer>\n                    <LinkContainer to=\"/login\">\n                      <NavItem>Login</NavItem>\n                    </LinkContainer>\n                  </Fragment>\n              }\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Routes childProps={childProps} />\n      </div>\n    );\n  }\n  \n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router basename={'/gdoh' || ''}>\n    <App />\n  </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","module.exports = __webpack_public_path__ + \"static/media/GPG-Logo.278d9f24.png\";","module.exports = __webpack_public_path__ + \"static/media/find.8b689b8f.png\";"],"sourceRoot":""}